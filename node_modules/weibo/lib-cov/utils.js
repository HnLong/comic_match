/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['utils.js']) {
  _$jscoverage['utils.js'] = [];
  _$jscoverage['utils.js'][7] = 0;
  _$jscoverage['utils.js'][13] = 0;
  _$jscoverage['utils.js'][31] = 0;
  _$jscoverage['utils.js'][32] = 0;
  _$jscoverage['utils.js'][33] = 0;
  _$jscoverage['utils.js'][34] = 0;
  _$jscoverage['utils.js'][36] = 0;
  _$jscoverage['utils.js'][38] = 0;
  _$jscoverage['utils.js'][41] = 0;
  _$jscoverage['utils.js'][42] = 0;
  _$jscoverage['utils.js'][44] = 0;
  _$jscoverage['utils.js'][46] = 0;
  _$jscoverage['utils.js'][47] = 0;
  _$jscoverage['utils.js'][48] = 0;
  _$jscoverage['utils.js'][50] = 0;
  _$jscoverage['utils.js'][51] = 0;
  _$jscoverage['utils.js'][52] = 0;
  _$jscoverage['utils.js'][53] = 0;
  _$jscoverage['utils.js'][54] = 0;
  _$jscoverage['utils.js'][56] = 0;
  _$jscoverage['utils.js'][57] = 0;
  _$jscoverage['utils.js'][58] = 0;
  _$jscoverage['utils.js'][60] = 0;
  _$jscoverage['utils.js'][62] = 0;
  _$jscoverage['utils.js'][65] = 0;
  _$jscoverage['utils.js'][66] = 0;
  _$jscoverage['utils.js'][67] = 0;
  _$jscoverage['utils.js'][68] = 0;
  _$jscoverage['utils.js'][70] = 0;
  _$jscoverage['utils.js'][74] = 0;
  _$jscoverage['utils.js'][75] = 0;
  _$jscoverage['utils.js'][76] = 0;
  _$jscoverage['utils.js'][78] = 0;
  _$jscoverage['utils.js'][79] = 0;
  _$jscoverage['utils.js'][81] = 0;
  _$jscoverage['utils.js'][82] = 0;
  _$jscoverage['utils.js'][84] = 0;
  _$jscoverage['utils.js'][86] = 0;
  _$jscoverage['utils.js'][89] = 0;
  _$jscoverage['utils.js'][90] = 0;
  _$jscoverage['utils.js'][91] = 0;
  _$jscoverage['utils.js'][93] = 0;
  _$jscoverage['utils.js'][98] = 0;
  _$jscoverage['utils.js'][99] = 0;
  _$jscoverage['utils.js'][100] = 0;
  _$jscoverage['utils.js'][103] = 0;
  _$jscoverage['utils.js'][104] = 0;
  _$jscoverage['utils.js'][105] = 0;
  _$jscoverage['utils.js'][106] = 0;
  _$jscoverage['utils.js'][107] = 0;
  _$jscoverage['utils.js'][109] = 0;
  _$jscoverage['utils.js'][110] = 0;
  _$jscoverage['utils.js'][113] = 0;
  _$jscoverage['utils.js'][116] = 0;
  _$jscoverage['utils.js'][117] = 0;
  _$jscoverage['utils.js'][118] = 0;
  _$jscoverage['utils.js'][119] = 0;
  _$jscoverage['utils.js'][121] = 0;
  _$jscoverage['utils.js'][129] = 0;
  _$jscoverage['utils.js'][131] = 0;
  _$jscoverage['utils.js'][132] = 0;
  _$jscoverage['utils.js'][133] = 0;
  _$jscoverage['utils.js'][142] = 0;
  _$jscoverage['utils.js'][143] = 0;
  _$jscoverage['utils.js'][156] = 0;
  _$jscoverage['utils.js'][157] = 0;
}
_$jscoverage['utils.js'][7]++;
"use strict";
_$jscoverage['utils.js'][13]++;
var STRING_FORMAT_REGEX = exports.STRING_FORMAT_REGEX = /\{\{([\w\s\.\'\"\(\),-\[\]]+)?\}\}/g;
_$jscoverage['utils.js'][31]++;
exports.format = (function (s, values) {
  _$jscoverage['utils.js'][32]++;
  var cb;
  _$jscoverage['utils.js'][33]++;
  if (typeof values === "function") {
    _$jscoverage['utils.js'][34]++;
    cb = values;
  }
  else {
    _$jscoverage['utils.js'][36]++;
    cb = (function (match, key) {
  _$jscoverage['utils.js'][36]++;
  return values[key];
});
  }
  _$jscoverage['utils.js'][38]++;
  return s.replace(STRING_FORMAT_REGEX, cb);
});
_$jscoverage['utils.js'][41]++;
var b64_hmac_sha1 = require("./sha1").b64_hmac_sha1;
_$jscoverage['utils.js'][42]++;
var crypto = require("crypto");
_$jscoverage['utils.js'][44]++;
var querystring = {parse: (function (s) {
  _$jscoverage['utils.js'][46]++;
  var qs = {};
  _$jscoverage['utils.js'][47]++;
  if (typeof s !== "string") {
    _$jscoverage['utils.js'][48]++;
    return qs;
  }
  _$jscoverage['utils.js'][50]++;
  var pairs = s.split("&");
  _$jscoverage['utils.js'][51]++;
  for (var i = 0, len = pairs.length; i < len; i++) {
    _$jscoverage['utils.js'][52]++;
    var pair = pairs[i].split("=", 2);
    _$jscoverage['utils.js'][53]++;
    if (pair.length !== 2) {
      _$jscoverage['utils.js'][54]++;
      continue;
    }
    _$jscoverage['utils.js'][56]++;
    var key = pair[0].trim();
    _$jscoverage['utils.js'][57]++;
    if (! key) {
      _$jscoverage['utils.js'][58]++;
      continue;
    }
    _$jscoverage['utils.js'][60]++;
    qs[decodeURIComponent(key)] = decodeURIComponent(pair[1]);
}
  _$jscoverage['utils.js'][62]++;
  return qs;
}), stringify: (function (data) {
  _$jscoverage['utils.js'][65]++;
  var pairs = [];
  _$jscoverage['utils.js'][66]++;
  data = data || {};
  _$jscoverage['utils.js'][67]++;
  for (var k in data) {
    _$jscoverage['utils.js'][68]++;
    pairs.push(encodeURIComponent(k) + "=" + encodeURIComponent("" + data[k]));
}
  _$jscoverage['utils.js'][70]++;
  return pairs.join("&");
})};
_$jscoverage['utils.js'][74]++;
function urljoin(url, params) {
  _$jscoverage['utils.js'][75]++;
  if (typeof params === "object") {
    _$jscoverage['utils.js'][76]++;
    params = querystring.stringify(params);
  }
  _$jscoverage['utils.js'][78]++;
  if (! params) {
    _$jscoverage['utils.js'][79]++;
    return url;
  }
  _$jscoverage['utils.js'][81]++;
  if (url.indexOf("?") < 0) {
    _$jscoverage['utils.js'][82]++;
    url += "?";
  }
  else {
    _$jscoverage['utils.js'][84]++;
    url += "&";
  }
  _$jscoverage['utils.js'][86]++;
  return url + params;
}
_$jscoverage['utils.js'][89]++;
function base64HmacSha1(baseString, key) {
  _$jscoverage['utils.js'][90]++;
  if (b64_hmac_sha1) {
    _$jscoverage['utils.js'][91]++;
    return b64_hmac_sha1(key, baseString);
  }
  _$jscoverage['utils.js'][93]++;
  return new crypto.Hmac().init("sha1", key).update(baseString).digest("base64");
}
_$jscoverage['utils.js'][98]++;
function htmlencode(str) {
  _$jscoverage['utils.js'][99]++;
  if (! str) {
    _$jscoverage['utils.js'][99]++;
    return "";
  }
  _$jscoverage['utils.js'][100]++;
  return str.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
_$jscoverage['utils.js'][103]++;
exports.extend = (function (destination) {
  _$jscoverage['utils.js'][104]++;
  for (var i = 1, len = arguments.length; i < len; i++) {
    _$jscoverage['utils.js'][105]++;
    var source = arguments[i];
    _$jscoverage['utils.js'][106]++;
    if (! source) {
      _$jscoverage['utils.js'][107]++;
      continue;
    }
    _$jscoverage['utils.js'][109]++;
    for (var property in source) {
      _$jscoverage['utils.js'][110]++;
      destination[property] = source[property];
}
}
  _$jscoverage['utils.js'][113]++;
  return destination;
});
_$jscoverage['utils.js'][116]++;
exports.querystring = querystring;
_$jscoverage['utils.js'][117]++;
exports.base64HmacSha1 = base64HmacSha1;
_$jscoverage['utils.js'][118]++;
exports.urljoin = urljoin;
_$jscoverage['utils.js'][119]++;
exports.htmlencode = htmlencode;
_$jscoverage['utils.js'][121]++;
var MIME_TYPES = {"jpg": "image/jpeg", "jpeg": "image/jpeg", "gif": "image/gif", "png": "image/png", "bmp": "image/bmp"};
_$jscoverage['utils.js'][129]++;
var BIN_TYPE = "application/octet-stream";
_$jscoverage['utils.js'][131]++;
exports.mimeLookup = (function (name, fallback) {
  _$jscoverage['utils.js'][132]++;
  var ext = name.replace(/.*[\.\/]/, "").toLowerCase();
  _$jscoverage['utils.js'][133]++;
  return MIME_TYPES[ext] || fallback || BIN_TYPE;
});
_$jscoverage['utils.js'][142]++;
exports.escape = (function (html) {
  _$jscoverage['utils.js'][143]++;
  return String(html).replace(/&(?!\w+;)/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
});
_$jscoverage['utils.js'][156]++;
exports.removeHTML = (function (s) {
  _$jscoverage['utils.js'][157]++;
  return s.replace(/(<.*?>)/gi, "");
});
_$jscoverage['utils.js'].source = ["/*!"," * node-weibo - lib/utils.js"," * Copyright(c) 2012 fengmk2 &lt;fengmk2@gmail.com&gt;"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var STRING_FORMAT_REGEX = exports.STRING_FORMAT_REGEX = /\\{\\{([\\w\\s\\.\\'\\\"\\(\\),-\\[\\]]+)?\\}\\}/g;","","/**"," * &#230;&#160;&#188;&#229;&#188;&#143;&#229;&#140;&#150;&#229;&#173;&#151;&#231;&#172;&#166;&#228;&#184;&#178;"," * eg:"," *  '{0}&#229;&#164;&#169;&#230;&#156;&#137;{1}&#228;&#184;&#170;&#229;&#176;&#143;&#230;&#151;&#182;'.format([1, 24]) "," *  or"," *  '{{day}}&#229;&#164;&#169;&#230;&#156;&#137;{{hour}}&#228;&#184;&#170;&#229;&#176;&#143;&#230;&#151;&#182;'.format({day:1, hour:24}})"," * @param {Object} values"," */",""," /**","  * Simple string template helper.","  * ","  * @param {String} s, template string","  * @param {Object|Function} values, template values or match callback.","  * @return {String}","  */","exports.format = function (s, values) {","  var cb;","  if (typeof values === 'function') {","    cb = values;","  } else {","    cb = function (match, key) { return values[key]; };","  }","  return s.replace(STRING_FORMAT_REGEX, cb);","};","","var b64_hmac_sha1 = require('./sha1').b64_hmac_sha1;","var crypto = require('crypto');","","var querystring = {","  parse: function (s) {","    var qs = {};","    if (typeof s !== 'string') {","      return qs;","    }","    var pairs = s.split('&amp;');","    for (var i = 0, len = pairs.length; i &lt; len; i++) {","      var pair = pairs[i].split('=', 2);","      if (pair.length !== 2) {","        continue;","      }","      var key = pair[0].trim();","      if (!key) {","        continue;","      }","      qs[decodeURIComponent(key)] = decodeURIComponent(pair[1]);","    }","    return qs;","  },","  stringify: function (data) {","    var pairs = [];","    data = data || {};","    for (var k in data) {","      pairs.push(encodeURIComponent(k) + '=' + encodeURIComponent('' + data[k]));","    }","    return pairs.join('&amp;');","  }","};","","function urljoin(url, params) {","  if (typeof params === 'object') {","    params = querystring.stringify(params);","  }","  if (!params) {","    return url;","  }","  if (url.indexOf('?') &lt; 0) {","    url += '?';","  } else {","    url += '&amp;';","  }","  return url + params;","}","","function base64HmacSha1(baseString, key) {","  if (b64_hmac_sha1) {","    return b64_hmac_sha1(key, baseString);","  }","  return new crypto.Hmac().init(\"sha1\", key).update(baseString).digest(\"base64\");","}","","// HTML &#231;&#188;&#150;&#231;&#160;&#129;","// test: hard code testing &#227;&#128;&#130;&#227;&#128;&#130;&#227;&#128;&#130; '\"!@#$%^&amp;*()-=+ |][ {} ~` &amp;&amp;&amp;&amp;&amp;amp; &amp;lt; &amp; C++ c++c + +c &amp;amp;","function htmlencode(str) {","  if (!str) { return ''; }","  return str.replace(/&amp;/g, '&amp;amp;').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;');","}","","exports.extend = function (destination) {","  for (var i = 1, len = arguments.length; i &lt; len; i++) {","    var source = arguments[i];","    if (!source) {","      continue;","    }","    for (var property in source) {","      destination[property] = source[property];","    }","  }","  return destination;","};","","exports.querystring = querystring;","exports.base64HmacSha1 = base64HmacSha1;","exports.urljoin = urljoin;","exports.htmlencode = htmlencode;","","var MIME_TYPES = {","  'jpg': 'image/jpeg',","  'jpeg': 'image/jpeg',","  'gif': 'image/gif',","  'png': 'image/png',","  'bmp': 'image/bmp',","};","","var BIN_TYPE = 'application/octet-stream';","","exports.mimeLookup = function (name, fallback) {","  var ext = name.replace(/.*[\\.\\/]/, '').toLowerCase();","  return MIME_TYPES[ext] || fallback || BIN_TYPE;","};","","/**"," * Escape the given string of `html`."," *"," * @param {String} html"," * @return {String}"," */","exports.escape = function (html) {","  return String(html)","    .replace(/&amp;(?!\\w+;)/g, '&amp;amp;')","    .replace(/&lt;/g, '&amp;lt;')","    .replace(/&gt;/g, '&amp;gt;')","    .replace(/\"/g, '&amp;quot;');","};","","/**"," * Remove all html tags."," * "," * @param {String} s"," * @return {String}"," */","exports.removeHTML = function (s) {","  return s.replace(/(&lt;.*?&gt;)/ig, '');","};"];
