/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['tbase.js']) {
  _$jscoverage['tbase.js'] = [];
  _$jscoverage['tbase.js'][7] = 0;
  _$jscoverage['tbase.js'][13] = 0;
  _$jscoverage['tbase.js'][14] = 0;
  _$jscoverage['tbase.js'][15] = 0;
  _$jscoverage['tbase.js'][16] = 0;
  _$jscoverage['tbase.js'][17] = 0;
  _$jscoverage['tbase.js'][22] = 0;
  _$jscoverage['tbase.js'][23] = 0;
  _$jscoverage['tbase.js'][123] = 0;
  _$jscoverage['tbase.js'][125] = 0;
  _$jscoverage['tbase.js'][126] = 0;
  _$jscoverage['tbase.js'][127] = 0;
  _$jscoverage['tbase.js'][135] = 0;
  _$jscoverage['tbase.js'][137] = 0;
  _$jscoverage['tbase.js'][138] = 0;
  _$jscoverage['tbase.js'][139] = 0;
  _$jscoverage['tbase.js'][140] = 0;
  _$jscoverage['tbase.js'][142] = 0;
  _$jscoverage['tbase.js'][143] = 0;
  _$jscoverage['tbase.js'][145] = 0;
  _$jscoverage['tbase.js'][147] = 0;
  _$jscoverage['tbase.js'][149] = 0;
  _$jscoverage['tbase.js'][151] = 0;
  _$jscoverage['tbase.js'][152] = 0;
  _$jscoverage['tbase.js'][155] = 0;
  _$jscoverage['tbase.js'][156] = 0;
  _$jscoverage['tbase.js'][157] = 0;
  _$jscoverage['tbase.js'][158] = 0;
  _$jscoverage['tbase.js'][160] = 0;
  _$jscoverage['tbase.js'][161] = 0;
  _$jscoverage['tbase.js'][164] = 0;
  _$jscoverage['tbase.js'][165] = 0;
  _$jscoverage['tbase.js'][166] = 0;
  _$jscoverage['tbase.js'][167] = 0;
  _$jscoverage['tbase.js'][169] = 0;
  _$jscoverage['tbase.js'][170] = 0;
  _$jscoverage['tbase.js'][171] = 0;
  _$jscoverage['tbase.js'][192] = 0;
  _$jscoverage['tbase.js'][193] = 0;
  _$jscoverage['tbase.js'][199] = 0;
  _$jscoverage['tbase.js'][200] = 0;
  _$jscoverage['tbase.js'][201] = 0;
  _$jscoverage['tbase.js'][202] = 0;
  _$jscoverage['tbase.js'][225] = 0;
  _$jscoverage['tbase.js'][226] = 0;
  _$jscoverage['tbase.js'][229] = 0;
  _$jscoverage['tbase.js'][231] = 0;
  _$jscoverage['tbase.js'][232] = 0;
  _$jscoverage['tbase.js'][233] = 0;
  _$jscoverage['tbase.js'][251] = 0;
  _$jscoverage['tbase.js'][254] = 0;
  _$jscoverage['tbase.js'][255] = 0;
  _$jscoverage['tbase.js'][258] = 0;
  _$jscoverage['tbase.js'][259] = 0;
  _$jscoverage['tbase.js'][260] = 0;
  _$jscoverage['tbase.js'][267] = 0;
  _$jscoverage['tbase.js'][268] = 0;
  _$jscoverage['tbase.js'][269] = 0;
  _$jscoverage['tbase.js'][272] = 0;
  _$jscoverage['tbase.js'][274] = 0;
  _$jscoverage['tbase.js'][275] = 0;
  _$jscoverage['tbase.js'][276] = 0;
  _$jscoverage['tbase.js'][278] = 0;
  _$jscoverage['tbase.js'][280] = 0;
  _$jscoverage['tbase.js'][283] = 0;
  _$jscoverage['tbase.js'][284] = 0;
  _$jscoverage['tbase.js'][285] = 0;
  _$jscoverage['tbase.js'][287] = 0;
  _$jscoverage['tbase.js'][288] = 0;
  _$jscoverage['tbase.js'][289] = 0;
  _$jscoverage['tbase.js'][290] = 0;
  _$jscoverage['tbase.js'][291] = 0;
  _$jscoverage['tbase.js'][293] = 0;
  _$jscoverage['tbase.js'][296] = 0;
  _$jscoverage['tbase.js'][298] = 0;
  _$jscoverage['tbase.js'][299] = 0;
  _$jscoverage['tbase.js'][300] = 0;
  _$jscoverage['tbase.js'][301] = 0;
  _$jscoverage['tbase.js'][313] = 0;
  _$jscoverage['tbase.js'][314] = 0;
  _$jscoverage['tbase.js'][315] = 0;
  _$jscoverage['tbase.js'][316] = 0;
  _$jscoverage['tbase.js'][318] = 0;
  _$jscoverage['tbase.js'][319] = 0;
  _$jscoverage['tbase.js'][320] = 0;
  _$jscoverage['tbase.js'][321] = 0;
  _$jscoverage['tbase.js'][323] = 0;
  _$jscoverage['tbase.js'][324] = 0;
  _$jscoverage['tbase.js'][328] = 0;
  _$jscoverage['tbase.js'][329] = 0;
  _$jscoverage['tbase.js'][330] = 0;
  _$jscoverage['tbase.js'][332] = 0;
  _$jscoverage['tbase.js'][333] = 0;
  _$jscoverage['tbase.js'][335] = 0;
  _$jscoverage['tbase.js'][339] = 0;
  _$jscoverage['tbase.js'][340] = 0;
  _$jscoverage['tbase.js'][345] = 0;
  _$jscoverage['tbase.js'][346] = 0;
  _$jscoverage['tbase.js'][348] = 0;
  _$jscoverage['tbase.js'][349] = 0;
  _$jscoverage['tbase.js'][351] = 0;
  _$jscoverage['tbase.js'][352] = 0;
  _$jscoverage['tbase.js'][353] = 0;
  _$jscoverage['tbase.js'][354] = 0;
  _$jscoverage['tbase.js'][357] = 0;
  _$jscoverage['tbase.js'][358] = 0;
  _$jscoverage['tbase.js'][359] = 0;
  _$jscoverage['tbase.js'][362] = 0;
  _$jscoverage['tbase.js'][363] = 0;
  _$jscoverage['tbase.js'][365] = 0;
  _$jscoverage['tbase.js'][366] = 0;
  _$jscoverage['tbase.js'][369] = 0;
  _$jscoverage['tbase.js'][370] = 0;
  _$jscoverage['tbase.js'][373] = 0;
  _$jscoverage['tbase.js'][374] = 0;
  _$jscoverage['tbase.js'][375] = 0;
  _$jscoverage['tbase.js'][377] = 0;
  _$jscoverage['tbase.js'][384] = 0;
  _$jscoverage['tbase.js'][385] = 0;
  _$jscoverage['tbase.js'][386] = 0;
  _$jscoverage['tbase.js'][389] = 0;
  _$jscoverage['tbase.js'][390] = 0;
  _$jscoverage['tbase.js'][391] = 0;
  _$jscoverage['tbase.js'][392] = 0;
  _$jscoverage['tbase.js'][393] = 0;
  _$jscoverage['tbase.js'][394] = 0;
  _$jscoverage['tbase.js'][396] = 0;
  _$jscoverage['tbase.js'][397] = 0;
  _$jscoverage['tbase.js'][401] = 0;
  _$jscoverage['tbase.js'][402] = 0;
  _$jscoverage['tbase.js'][403] = 0;
  _$jscoverage['tbase.js'][405] = 0;
  _$jscoverage['tbase.js'][407] = 0;
  _$jscoverage['tbase.js'][410] = 0;
  _$jscoverage['tbase.js'][411] = 0;
  _$jscoverage['tbase.js'][412] = 0;
  _$jscoverage['tbase.js'][413] = 0;
  _$jscoverage['tbase.js'][423] = 0;
  _$jscoverage['tbase.js'][424] = 0;
  _$jscoverage['tbase.js'][426] = 0;
  _$jscoverage['tbase.js'][427] = 0;
  _$jscoverage['tbase.js'][428] = 0;
  _$jscoverage['tbase.js'][430] = 0;
  _$jscoverage['tbase.js'][431] = 0;
  _$jscoverage['tbase.js'][432] = 0;
  _$jscoverage['tbase.js'][434] = 0;
  _$jscoverage['tbase.js'][439] = 0;
  _$jscoverage['tbase.js'][440] = 0;
  _$jscoverage['tbase.js'][442] = 0;
  _$jscoverage['tbase.js'][443] = 0;
  _$jscoverage['tbase.js'][444] = 0;
  _$jscoverage['tbase.js'][452] = 0;
  _$jscoverage['tbase.js'][453] = 0;
  _$jscoverage['tbase.js'][454] = 0;
  _$jscoverage['tbase.js'][455] = 0;
  _$jscoverage['tbase.js'][456] = 0;
  _$jscoverage['tbase.js'][458] = 0;
  _$jscoverage['tbase.js'][459] = 0;
  _$jscoverage['tbase.js'][460] = 0;
  _$jscoverage['tbase.js'][461] = 0;
  _$jscoverage['tbase.js'][463] = 0;
  _$jscoverage['tbase.js'][464] = 0;
  _$jscoverage['tbase.js'][465] = 0;
  _$jscoverage['tbase.js'][467] = 0;
  _$jscoverage['tbase.js'][468] = 0;
  _$jscoverage['tbase.js'][469] = 0;
  _$jscoverage['tbase.js'][471] = 0;
  _$jscoverage['tbase.js'][474] = 0;
  _$jscoverage['tbase.js'][475] = 0;
  _$jscoverage['tbase.js'][476] = 0;
  _$jscoverage['tbase.js'][477] = 0;
  _$jscoverage['tbase.js'][478] = 0;
  _$jscoverage['tbase.js'][479] = 0;
  _$jscoverage['tbase.js'][481] = 0;
  _$jscoverage['tbase.js'][482] = 0;
  _$jscoverage['tbase.js'][486] = 0;
  _$jscoverage['tbase.js'][487] = 0;
  _$jscoverage['tbase.js'][489] = 0;
  _$jscoverage['tbase.js'][491] = 0;
  _$jscoverage['tbase.js'][492] = 0;
  _$jscoverage['tbase.js'][493] = 0;
  _$jscoverage['tbase.js'][494] = 0;
  _$jscoverage['tbase.js'][498] = 0;
  _$jscoverage['tbase.js'][503] = 0;
  _$jscoverage['tbase.js'][504] = 0;
  _$jscoverage['tbase.js'][507] = 0;
  _$jscoverage['tbase.js'][508] = 0;
  _$jscoverage['tbase.js'][511] = 0;
  _$jscoverage['tbase.js'][514] = 0;
  _$jscoverage['tbase.js'][516] = 0;
  _$jscoverage['tbase.js'][517] = 0;
  _$jscoverage['tbase.js'][521] = 0;
  _$jscoverage['tbase.js'][530] = 0;
  _$jscoverage['tbase.js'][531] = 0;
  _$jscoverage['tbase.js'][534] = 0;
  _$jscoverage['tbase.js'][535] = 0;
  _$jscoverage['tbase.js'][538] = 0;
  _$jscoverage['tbase.js'][539] = 0;
  _$jscoverage['tbase.js'][546] = 0;
  _$jscoverage['tbase.js'][549] = 0;
  _$jscoverage['tbase.js'][550] = 0;
  _$jscoverage['tbase.js'][551] = 0;
  _$jscoverage['tbase.js'][552] = 0;
  _$jscoverage['tbase.js'][553] = 0;
  _$jscoverage['tbase.js'][554] = 0;
  _$jscoverage['tbase.js'][555] = 0;
  _$jscoverage['tbase.js'][557] = 0;
  _$jscoverage['tbase.js'][558] = 0;
  _$jscoverage['tbase.js'][560] = 0;
  _$jscoverage['tbase.js'][561] = 0;
  _$jscoverage['tbase.js'][564] = 0;
  _$jscoverage['tbase.js'][565] = 0;
  _$jscoverage['tbase.js'][568] = 0;
  _$jscoverage['tbase.js'][569] = 0;
  _$jscoverage['tbase.js'][570] = 0;
  _$jscoverage['tbase.js'][573] = 0;
  _$jscoverage['tbase.js'][574] = 0;
  _$jscoverage['tbase.js'][577] = 0;
  _$jscoverage['tbase.js'][578] = 0;
  _$jscoverage['tbase.js'][581] = 0;
  _$jscoverage['tbase.js'][582] = 0;
  _$jscoverage['tbase.js'][585] = 0;
  _$jscoverage['tbase.js'][586] = 0;
  _$jscoverage['tbase.js'][589] = 0;
  _$jscoverage['tbase.js'][590] = 0;
  _$jscoverage['tbase.js'][593] = 0;
  _$jscoverage['tbase.js'][594] = 0;
  _$jscoverage['tbase.js'][597] = 0;
  _$jscoverage['tbase.js'][598] = 0;
  _$jscoverage['tbase.js'][601] = 0;
  _$jscoverage['tbase.js'][602] = 0;
  _$jscoverage['tbase.js'][605] = 0;
  _$jscoverage['tbase.js'][606] = 0;
  _$jscoverage['tbase.js'][613] = 0;
  _$jscoverage['tbase.js'][614] = 0;
  _$jscoverage['tbase.js'][617] = 0;
  _$jscoverage['tbase.js'][618] = 0;
  _$jscoverage['tbase.js'][621] = 0;
  _$jscoverage['tbase.js'][622] = 0;
  _$jscoverage['tbase.js'][625] = 0;
  _$jscoverage['tbase.js'][626] = 0;
  _$jscoverage['tbase.js'][629] = 0;
  _$jscoverage['tbase.js'][630] = 0;
  _$jscoverage['tbase.js'][633] = 0;
  _$jscoverage['tbase.js'][634] = 0;
  _$jscoverage['tbase.js'][641] = 0;
  _$jscoverage['tbase.js'][642] = 0;
  _$jscoverage['tbase.js'][648] = 0;
  _$jscoverage['tbase.js'][649] = 0;
  _$jscoverage['tbase.js'][650] = 0;
  _$jscoverage['tbase.js'][653] = 0;
  _$jscoverage['tbase.js'][654] = 0;
  _$jscoverage['tbase.js'][655] = 0;
  _$jscoverage['tbase.js'][656] = 0;
  _$jscoverage['tbase.js'][658] = 0;
  _$jscoverage['tbase.js'][659] = 0;
  _$jscoverage['tbase.js'][660] = 0;
  _$jscoverage['tbase.js'][662] = 0;
  _$jscoverage['tbase.js'][663] = 0;
  _$jscoverage['tbase.js'][670] = 0;
  _$jscoverage['tbase.js'][671] = 0;
  _$jscoverage['tbase.js'][672] = 0;
  _$jscoverage['tbase.js'][679] = 0;
  _$jscoverage['tbase.js'][680] = 0;
  _$jscoverage['tbase.js'][681] = 0;
  _$jscoverage['tbase.js'][688] = 0;
  _$jscoverage['tbase.js'][689] = 0;
  _$jscoverage['tbase.js'][690] = 0;
  _$jscoverage['tbase.js'][693] = 0;
  _$jscoverage['tbase.js'][694] = 0;
  _$jscoverage['tbase.js'][695] = 0;
  _$jscoverage['tbase.js'][696] = 0;
  _$jscoverage['tbase.js'][697] = 0;
  _$jscoverage['tbase.js'][699] = 0;
  _$jscoverage['tbase.js'][700] = 0;
  _$jscoverage['tbase.js'][701] = 0;
  _$jscoverage['tbase.js'][703] = 0;
  _$jscoverage['tbase.js'][704] = 0;
  _$jscoverage['tbase.js'][705] = 0;
  _$jscoverage['tbase.js'][706] = 0;
  _$jscoverage['tbase.js'][707] = 0;
  _$jscoverage['tbase.js'][708] = 0;
  _$jscoverage['tbase.js'][710] = 0;
  _$jscoverage['tbase.js'][711] = 0;
  _$jscoverage['tbase.js'][712] = 0;
  _$jscoverage['tbase.js'][714] = 0;
  _$jscoverage['tbase.js'][715] = 0;
  _$jscoverage['tbase.js'][717] = 0;
  _$jscoverage['tbase.js'][720] = 0;
  _$jscoverage['tbase.js'][721] = 0;
  _$jscoverage['tbase.js'][726] = 0;
  _$jscoverage['tbase.js'][727] = 0;
  _$jscoverage['tbase.js'][729] = 0;
  _$jscoverage['tbase.js'][730] = 0;
  _$jscoverage['tbase.js'][733] = 0;
  _$jscoverage['tbase.js'][735] = 0;
  _$jscoverage['tbase.js'][736] = 0;
  _$jscoverage['tbase.js'][737] = 0;
  _$jscoverage['tbase.js'][739] = 0;
  _$jscoverage['tbase.js'][740] = 0;
  _$jscoverage['tbase.js'][741] = 0;
  _$jscoverage['tbase.js'][742] = 0;
  _$jscoverage['tbase.js'][745] = 0;
  _$jscoverage['tbase.js'][746] = 0;
  _$jscoverage['tbase.js'][749] = 0;
  _$jscoverage['tbase.js'][751] = 0;
  _$jscoverage['tbase.js'][753] = 0;
  _$jscoverage['tbase.js'][754] = 0;
  _$jscoverage['tbase.js'][755] = 0;
  _$jscoverage['tbase.js'][757] = 0;
  _$jscoverage['tbase.js'][758] = 0;
  _$jscoverage['tbase.js'][761] = 0;
  _$jscoverage['tbase.js'][762] = 0;
  _$jscoverage['tbase.js'][763] = 0;
  _$jscoverage['tbase.js'][766] = 0;
  _$jscoverage['tbase.js'][768] = 0;
  _$jscoverage['tbase.js'][769] = 0;
  _$jscoverage['tbase.js'][771] = 0;
  _$jscoverage['tbase.js'][772] = 0;
  _$jscoverage['tbase.js'][773] = 0;
  _$jscoverage['tbase.js'][775] = 0;
  _$jscoverage['tbase.js'][776] = 0;
  _$jscoverage['tbase.js'][777] = 0;
  _$jscoverage['tbase.js'][778] = 0;
  _$jscoverage['tbase.js'][779] = 0;
  _$jscoverage['tbase.js'][780] = 0;
  _$jscoverage['tbase.js'][781] = 0;
  _$jscoverage['tbase.js'][782] = 0;
  _$jscoverage['tbase.js'][783] = 0;
  _$jscoverage['tbase.js'][784] = 0;
  _$jscoverage['tbase.js'][794] = 0;
  _$jscoverage['tbase.js'][795] = 0;
  _$jscoverage['tbase.js'][802] = 0;
  _$jscoverage['tbase.js'][803] = 0;
  _$jscoverage['tbase.js'][806] = 0;
  _$jscoverage['tbase.js'][807] = 0;
  _$jscoverage['tbase.js'][808] = 0;
  _$jscoverage['tbase.js'][809] = 0;
  _$jscoverage['tbase.js'][816] = 0;
  _$jscoverage['tbase.js'][817] = 0;
  _$jscoverage['tbase.js'][818] = 0;
  _$jscoverage['tbase.js'][821] = 0;
  _$jscoverage['tbase.js'][822] = 0;
  _$jscoverage['tbase.js'][829] = 0;
  _$jscoverage['tbase.js'][830] = 0;
  _$jscoverage['tbase.js'][831] = 0;
  _$jscoverage['tbase.js'][834] = 0;
  _$jscoverage['tbase.js'][835] = 0;
  _$jscoverage['tbase.js'][844] = 0;
  _$jscoverage['tbase.js'][845] = 0;
  _$jscoverage['tbase.js'][846] = 0;
  _$jscoverage['tbase.js'][849] = 0;
  _$jscoverage['tbase.js'][850] = 0;
  _$jscoverage['tbase.js'][851] = 0;
  _$jscoverage['tbase.js'][858] = 0;
  _$jscoverage['tbase.js'][859] = 0;
  _$jscoverage['tbase.js'][860] = 0;
  _$jscoverage['tbase.js'][861] = 0;
  _$jscoverage['tbase.js'][863] = 0;
  _$jscoverage['tbase.js'][865] = 0;
  _$jscoverage['tbase.js'][868] = 0;
  _$jscoverage['tbase.js'][869] = 0;
  _$jscoverage['tbase.js'][872] = 0;
  _$jscoverage['tbase.js'][873] = 0;
  _$jscoverage['tbase.js'][876] = 0;
  _$jscoverage['tbase.js'][877] = 0;
  _$jscoverage['tbase.js'][880] = 0;
  _$jscoverage['tbase.js'][881] = 0;
  _$jscoverage['tbase.js'][884] = 0;
  _$jscoverage['tbase.js'][885] = 0;
  _$jscoverage['tbase.js'][888] = 0;
  _$jscoverage['tbase.js'][889] = 0;
  _$jscoverage['tbase.js'][890] = 0;
  _$jscoverage['tbase.js'][891] = 0;
  _$jscoverage['tbase.js'][892] = 0;
  _$jscoverage['tbase.js'][893] = 0;
  _$jscoverage['tbase.js'][900] = 0;
  _$jscoverage['tbase.js'][901] = 0;
  _$jscoverage['tbase.js'][902] = 0;
  _$jscoverage['tbase.js'][909] = 0;
  _$jscoverage['tbase.js'][910] = 0;
  _$jscoverage['tbase.js'][913] = 0;
  _$jscoverage['tbase.js'][914] = 0;
  _$jscoverage['tbase.js'][915] = 0;
  _$jscoverage['tbase.js'][922] = 0;
  _$jscoverage['tbase.js'][923] = 0;
  _$jscoverage['tbase.js'][924] = 0;
  _$jscoverage['tbase.js'][927] = 0;
  _$jscoverage['tbase.js'][928] = 0;
  _$jscoverage['tbase.js'][931] = 0;
  _$jscoverage['tbase.js'][932] = 0;
  _$jscoverage['tbase.js'][935] = 0;
  _$jscoverage['tbase.js'][936] = 0;
  _$jscoverage['tbase.js'][943] = 0;
  _$jscoverage['tbase.js'][944] = 0;
  _$jscoverage['tbase.js'][947] = 0;
  _$jscoverage['tbase.js'][948] = 0;
  _$jscoverage['tbase.js'][951] = 0;
  _$jscoverage['tbase.js'][952] = 0;
  _$jscoverage['tbase.js'][955] = 0;
  _$jscoverage['tbase.js'][956] = 0;
  _$jscoverage['tbase.js'][959] = 0;
  _$jscoverage['tbase.js'][960] = 0;
  _$jscoverage['tbase.js'][963] = 0;
  _$jscoverage['tbase.js'][964] = 0;
  _$jscoverage['tbase.js'][965] = 0;
  _$jscoverage['tbase.js'][966] = 0;
  _$jscoverage['tbase.js'][973] = 0;
  _$jscoverage['tbase.js'][974] = 0;
  _$jscoverage['tbase.js'][975] = 0;
  _$jscoverage['tbase.js'][978] = 0;
  _$jscoverage['tbase.js'][979] = 0;
  _$jscoverage['tbase.js'][980] = 0;
  _$jscoverage['tbase.js'][981] = 0;
  _$jscoverage['tbase.js'][982] = 0;
  _$jscoverage['tbase.js'][989] = 0;
  _$jscoverage['tbase.js'][990] = 0;
  _$jscoverage['tbase.js'][991] = 0;
  _$jscoverage['tbase.js'][994] = 0;
  _$jscoverage['tbase.js'][995] = 0;
  _$jscoverage['tbase.js'][996] = 0;
  _$jscoverage['tbase.js'][997] = 0;
  _$jscoverage['tbase.js'][1004] = 0;
  _$jscoverage['tbase.js'][1005] = 0;
  _$jscoverage['tbase.js'][1006] = 0;
}
_$jscoverage['tbase.js'][7]++;
"use strict";
_$jscoverage['tbase.js'][13]++;
var querystring = require("querystring");
_$jscoverage['tbase.js'][14]++;
var urllib = require("urllib");
_$jscoverage['tbase.js'][15]++;
var utils = require("./utils");
_$jscoverage['tbase.js'][16]++;
var OAuth = require("./oauth");
_$jscoverage['tbase.js'][17]++;
var emoji = require("emoji");
_$jscoverage['tbase.js'][22]++;
function TBase() {
  _$jscoverage['tbase.js'][23]++;
  this.config = {host: "api start url", result_format: ".json", appkey: "", secret: "", oauth_host: "", oauth_callback: "oob or url", oauth_version: "1.0", userinfo_has_counts: true, support_counts: true, support_comment: true, support_do_comment: true, support_repost_comment: true, support_repost_comment_to_root: false, support_upload: true, support_repost: true, repost_pre: "\u00e8\u00bd\u00ac:", repost_delimiter: "//", image_shorturl_pre: " [\u00e5\u009b\u00be] ", support_favorites: true, support_do_favorite: true, support_geo: true, support_max_id: true, support_destroy_msg: true, support_direct_messages: true, support_sent_direct_messages: true, support_mentions: true, support_friendships_create: true, support_search: true, support_search_max_id: false, support_favorites_max_id: false, need_processMsg: true, comment_need_user_id: false, public_timeline: "/statuses/public_timeline", home_timeline: "/statuses/home_timeline", user_timeline: "/statuses/user_timeline", mentions: "/statuses/mentions", comments_timeline: "/comments/timeline", comments_mentions: "/comments/mentions", comments_to_me: "/comments/to_me", comments_by_me: "/comments/by_me", repost_timeline: "/statuses/repost_timeline", comments: "/statuses/comments", show: "/statuses/show", count: "/statuses/count", update: "/statuses/update", upload: "/statuses/upload", repost: "/statuses/repost", destroy: "/statuses/destroy", followers: "/statuses/followers", friends: "/statuses/friends", favorites: "/favorites", favorite_show: "/favorites/show", favorite_create: "/favorites/create", favorite_destroy: "/favorites/destroy", comment_create: "/statuses/comment", comment_reply: "/statuses/reply", comment_destroy: "/statuses/comment_destroy", destroy_msg: "/direct_messages/destroy/{{id}}", direct_messages: "/direct_messages", sent_direct_messages: "/direct_messages/sent", new_message: "/direct_messages/new", verify_credentials: "/account/verify_credentials", user_show: "/users/show", rate_limit_status: "/account/rate_limit_status", friendships_create: "/friendships/create", friendships_destroy: "/friendships/destroy", friendships_show: "/friendships/show", reset_count: "/statuses/reset_count", emotions: "/emotions", tags: "/tags", create_tag: "/tags/create", destroy_tag: "/tags/destroy", tags_suggestions: "/tags/suggestions", search: "/statuses/search", user_search: "/users/search", oauth_authorize: "/oauth/authorize", oauth_request_token: "/oauth/request_token", oauth_access_token: "/oauth/access_token", pic_field: "pic"};
}
_$jscoverage['tbase.js'][123]++;
module.exports = TBase;
_$jscoverage['tbase.js'][125]++;
TBase.prototype.init = (function (config) {
  _$jscoverage['tbase.js'][126]++;
  for (var k in config) {
    _$jscoverage['tbase.js'][127]++;
    this.config[k] = config[k];
}
});
_$jscoverage['tbase.js'][135]++;
TBase.prototype.URL_RE = new RegExp("(?:\\[url\\s*=\\s*|)((?:www\\.|http[s]?://)[\\w\\.\\?%&\\-/#=;:!\\+~]+)(?:\\](.+)\\[/url\\]|)", "ig");
_$jscoverage['tbase.js'][137]++;
TBase.prototype.process_text = (function (status) {
  _$jscoverage['tbase.js'][138]++;
  var text = status.text;
  _$jscoverage['tbase.js'][139]++;
  if (! text) {
    _$jscoverage['tbase.js'][140]++;
    return "&nbsp;";
  }
  _$jscoverage['tbase.js'][142]++;
  text = utils.escape(text);
  _$jscoverage['tbase.js'][143]++;
  text = text.replace(this.URL_RE, this._replace_url);
  _$jscoverage['tbase.js'][145]++;
  text = this.process_at(text, status);
  _$jscoverage['tbase.js'][147]++;
  text = this.process_emotional(text, status);
  _$jscoverage['tbase.js'][149]++;
  text = this.process_search(text, status);
  _$jscoverage['tbase.js'][151]++;
  text = emoji.unifiedToHTML(emoji.softbankToUnified(text));
  _$jscoverage['tbase.js'][152]++;
  return text || "&nbsp;";
});
_$jscoverage['tbase.js'][155]++;
TBase.prototype._replace_url = (function (m, g1, g2) {
  _$jscoverage['tbase.js'][156]++;
  var url = g1;
  _$jscoverage['tbase.js'][157]++;
  if (g1.indexOf("http") !== 0) {
    _$jscoverage['tbase.js'][158]++;
    url = "http://" + g1;
  }
  _$jscoverage['tbase.js'][160]++;
  var tpl = "<a target=\"_blank\" class=\"link\" href=\"{{url}}\">{{value}}</a>";
  _$jscoverage['tbase.js'][161]++;
  return utils.format(tpl, {url: url, title: g1, value: g2 || g1});
});
_$jscoverage['tbase.js'][164]++;
TBase.prototype.SearchMatchReg = /#([^#]+)#/g;
_$jscoverage['tbase.js'][165]++;
TBase.prototype.process_search = (function (text, status) {
  _$jscoverage['tbase.js'][166]++;
  var url = this.config.search_url;
  _$jscoverage['tbase.js'][167]++;
  return text.replace(this.SearchMatchReg, (function (m, g1) {
  _$jscoverage['tbase.js'][169]++;
  var search = utils.removeHTML(g1);
  _$jscoverage['tbase.js'][170]++;
  var tpl = "<a target=\"_blank\" href=\"{{url}}{{searchEncode}}\" title=\"Search #{{search}}#\">#{{search}}#</a>";
  _$jscoverage['tbase.js'][171]++;
  return utils.format(tpl, {search: search, searchEncode: encodeURIComponent(search), url: url});
}));
});
_$jscoverage['tbase.js'][192]++;
TBase.prototype._at_match_rex = /@([\u00e2\u0097\u008f\w\-\_\u2E80-\u3000\u303F-\u9FFF]+)/g;
_$jscoverage['tbase.js'][193]++;
TBase.prototype.process_at = (function (text, status) {
  _$jscoverage['tbase.js'][199]++;
  var homeurl = this.config.user_home_url;
  _$jscoverage['tbase.js'][200]++;
  return text.replace(this._at_match_rex, (function (m, g1) {
  _$jscoverage['tbase.js'][201]++;
  var url = homeurl + encodeURIComponent(g1);
  _$jscoverage['tbase.js'][202]++;
  return "<a class=\"at-user-link\" href=\"" + url + "\">@" + g1 + "</a>";
}));
});
_$jscoverage['tbase.js'][225]++;
TBase.prototype.process_emotional = (function (text, status) {
  _$jscoverage['tbase.js'][226]++;
  return text.replace(/\[([\u4e00-\u9fff,\uff1f,\w]{1,6})\]/g, this._replace_emotional.bind(this));
});
_$jscoverage['tbase.js'][229]++;
TBase.prototype.EMOTION_TPL = "<img title=\"{{title}}\" src=\"{{src}}\" />";
_$jscoverage['tbase.js'][231]++;
TBase.prototype._replace_emotional = (function (m, g1) {
  _$jscoverage['tbase.js'][232]++;
  if (! g1) {
    _$jscoverage['tbase.js'][233]++;
    return m;
  }
  _$jscoverage['tbase.js'][251]++;
  return m;
});
_$jscoverage['tbase.js'][254]++;
TBase.prototype.url_encode = (function (text) {
  _$jscoverage['tbase.js'][255]++;
  return encodeURIComponent(text);
});
_$jscoverage['tbase.js'][258]++;
TBase.prototype._timeline = (function (request_method, user, cursor, callback, playload) {
  _$jscoverage['tbase.js'][259]++;
  cursor = this.convert_cursor(cursor);
  _$jscoverage['tbase.js'][260]++;
  var params = {type: "GET", playload: playload || "status[]", user: user, data: cursor, request_method: request_method};
  _$jscoverage['tbase.js'][267]++;
  var url = this.config[request_method];
  _$jscoverage['tbase.js'][268]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][269]++;
  return this;
});
_$jscoverage['tbase.js'][272]++;
TBase.prototype.errorname = (function (name) {
  _$jscoverage['tbase.js'][274]++;
  name = name.replace(/(?:^\w|\_\w)/g, (function (m) {
  _$jscoverage['tbase.js'][275]++;
  if (m.length === 2) {
    _$jscoverage['tbase.js'][276]++;
    m = m.substring(1);
  }
  _$jscoverage['tbase.js'][278]++;
  return m.toUpperCase();
}));
  _$jscoverage['tbase.js'][280]++;
  return name + "Error";
});
_$jscoverage['tbase.js'][283]++;
TBase.prototype.detect_error = (function (method, res, playload, data) {
  _$jscoverage['tbase.js'][284]++;
  if (res.statusCode === 200) {
    _$jscoverage['tbase.js'][285]++;
    return null;
  }
  _$jscoverage['tbase.js'][287]++;
  var errMessage = null;
  _$jscoverage['tbase.js'][288]++;
  if (method === "get_request_token" || method === "get_access_token") {
    _$jscoverage['tbase.js'][289]++;
    var token = querystring.parse(data);
    _$jscoverage['tbase.js'][290]++;
    if (token) {
      _$jscoverage['tbase.js'][291]++;
      errMessage = "Get request token error, " + (token.error_CN || token.error || data);
    }
    else {
      _$jscoverage['tbase.js'][293]++;
      errMessage = "Get request token error, empty token string";
    }
  }
  else {
    _$jscoverage['tbase.js'][296]++;
    errMessage = data.error_CN || data.error || data.message || data;
  }
  _$jscoverage['tbase.js'][298]++;
  var err = new Error(errMessage);
  _$jscoverage['tbase.js'][299]++;
  err.data = data;
  _$jscoverage['tbase.js'][300]++;
  err.name = this.errorname(method);
  _$jscoverage['tbase.js'][301]++;
  return err;
});
_$jscoverage['tbase.js'][313]++;
TBase.prototype.request = (function (url, args, callback) {
  _$jscoverage['tbase.js'][314]++;
  var playload = args.playload;
  _$jscoverage['tbase.js'][315]++;
  if (playload !== "string") {
    _$jscoverage['tbase.js'][316]++;
    args.dataType = "json";
  }
  _$jscoverage['tbase.js'][318]++;
  var self = this;
  _$jscoverage['tbase.js'][319]++;
  urllib.request(url, args, (function (err, data, res) {
  _$jscoverage['tbase.js'][320]++;
  if (err) {
    _$jscoverage['tbase.js'][321]++;
    return callback(err);
  }
  _$jscoverage['tbase.js'][323]++;
  if (playload === "string") {
    _$jscoverage['tbase.js'][324]++;
    data = data.toString();
  }
  _$jscoverage['tbase.js'][328]++;
  err = self.detect_error(args.request_method, res, playload, data);
  _$jscoverage['tbase.js'][329]++;
  if (err) {
    _$jscoverage['tbase.js'][330]++;
    return callback(err);
  }
  _$jscoverage['tbase.js'][332]++;
  if (playload === "string") {
    _$jscoverage['tbase.js'][333]++;
    return callback(null, data);
  }
  _$jscoverage['tbase.js'][335]++;
  callback(null, this.format_result(data, playload, args));
}), this);
});
_$jscoverage['tbase.js'][339]++;
TBase.prototype.send_request = (function (url, params, callback) {
  _$jscoverage['tbase.js'][340]++;
  var args = {type: "GET", playload: "status", headers: {}};
  _$jscoverage['tbase.js'][345]++;
  for (var k in params) {
    _$jscoverage['tbase.js'][346]++;
    args[k] = params[k];
}
  _$jscoverage['tbase.js'][348]++;
  args.type = (args.type || "GET").toUpperCase();
  _$jscoverage['tbase.js'][349]++;
  args.data = args.data || {};
  _$jscoverage['tbase.js'][351]++;
  var user = args.user || args.data.user || {};
  _$jscoverage['tbase.js'][352]++;
  args.user = user;
  _$jscoverage['tbase.js'][353]++;
  if (args.data && args.data.user) {
    _$jscoverage['tbase.js'][354]++;
    delete args.data.user;
  }
  _$jscoverage['tbase.js'][357]++;
  var api = args.api_host || this.config.host;
  _$jscoverage['tbase.js'][358]++;
  if (args.api_host) {
    _$jscoverage['tbase.js'][359]++;
    delete args.api_host;
  }
  _$jscoverage['tbase.js'][362]++;
  url = api + utils.format(url, (function (m, key) {
  _$jscoverage['tbase.js'][363]++;
  var val = args.data[key];
  _$jscoverage['tbase.js'][365]++;
  delete args.data[key];
  _$jscoverage['tbase.js'][366]++;
  return val;
}));
  _$jscoverage['tbase.js'][369]++;
  if (args.playload !== "string" && this.config.result_format) {
    _$jscoverage['tbase.js'][370]++;
    url += this.config.result_format;
  }
  _$jscoverage['tbase.js'][373]++;
  this.apply_auth(url, args, user);
  _$jscoverage['tbase.js'][374]++;
  if (args.type === "POST") {
    _$jscoverage['tbase.js'][375]++;
    args.headers["Content-Type"] = args.content_type || "application/x-www-form-urlencoded;charset=UTF-8;";
  }
  _$jscoverage['tbase.js'][377]++;
  this.request(url, args, callback);
});
_$jscoverage['tbase.js'][384]++;
TBase.prototype.format_authorization_url = (function (params) {
  _$jscoverage['tbase.js'][385]++;
  var login_url = (this.config.oauth_host || this.config.host) + this.config.oauth_authorize;
  _$jscoverage['tbase.js'][386]++;
  return OAuth.addToURL(login_url, params);
});
_$jscoverage['tbase.js'][389]++;
TBase.prototype.get_authorization_url = (function (user, callback) {
  _$jscoverage['tbase.js'][390]++;
  var self = this;
  _$jscoverage['tbase.js'][391]++;
  self.get_request_token(user, (function (err, token) {
  _$jscoverage['tbase.js'][392]++;
  var info = null;
  _$jscoverage['tbase.js'][393]++;
  if (err) {
    _$jscoverage['tbase.js'][394]++;
    return callback(err);
  }
  _$jscoverage['tbase.js'][396]++;
  if (token) {
    _$jscoverage['tbase.js'][397]++;
    var params = {oauth_token: token.oauth_token, oauth_callback: user.oauth_callback || self.config.oauth_callback};
    _$jscoverage['tbase.js'][401]++;
    info = token;
    _$jscoverage['tbase.js'][402]++;
    info.blogtype = user.blogtype;
    _$jscoverage['tbase.js'][403]++;
    info.auth_url = self.format_authorization_url(params);
  }
  _$jscoverage['tbase.js'][405]++;
  callback(err, info);
}));
  _$jscoverage['tbase.js'][407]++;
  return this;
});
_$jscoverage['tbase.js'][410]++;
TBase.prototype.get_request_token = (function (user, callback) {
  _$jscoverage['tbase.js'][411]++;
  var self = this;
  _$jscoverage['tbase.js'][412]++;
  var url = self.config.oauth_request_token;
  _$jscoverage['tbase.js'][413]++;
  var params = {type: "GET", user: user, playload: "string", data: {oauth_callback: user.oauth_callback || self.config.oauth_callback}, api_host: self.config.oauth_host, request_method: "get_request_token"};
  _$jscoverage['tbase.js'][423]++;
  if (self.config.oauth_request_params) {
    _$jscoverage['tbase.js'][424]++;
    utils.extend(params.data, self.config.oauth_request_params);
  }
  _$jscoverage['tbase.js'][426]++;
  self.send_request(url, params, (function (err, token) {
  _$jscoverage['tbase.js'][427]++;
  if (err) {
    _$jscoverage['tbase.js'][428]++;
    return callback(err);
  }
  _$jscoverage['tbase.js'][430]++;
  token = self.format_access_token(token);
  _$jscoverage['tbase.js'][431]++;
  token.blogtype = user.blogtype;
  _$jscoverage['tbase.js'][432]++;
  callback(null, token);
}));
  _$jscoverage['tbase.js'][434]++;
  return this;
}), TBase.prototype.get_access_token = (function (user, callback) {
  _$jscoverage['tbase.js'][439]++;
  if (! user.authtype) {
    _$jscoverage['tbase.js'][440]++;
    user.authtype = "oauth";
  }
  _$jscoverage['tbase.js'][442]++;
  var url = this.config.oauth_access_token;
  _$jscoverage['tbase.js'][443]++;
  var data = {};
  _$jscoverage['tbase.js'][444]++;
  var params = {type: "GET", user: user, playload: "string", data: data, api_host: this.config.oauth_host, request_method: "get_access_token"};
  _$jscoverage['tbase.js'][452]++;
  var oauth_verifier = user.oauth_pin || user.oauth_verifier || "no_verifier";
  _$jscoverage['tbase.js'][453]++;
  if (oauth_verifier) {
    _$jscoverage['tbase.js'][454]++;
    data.oauth_verifier = oauth_verifier;
    _$jscoverage['tbase.js'][455]++;
    delete user.oauth_pin;
    _$jscoverage['tbase.js'][456]++;
    delete user.oauth_verifier;
  }
  _$jscoverage['tbase.js'][458]++;
  if (user.authtype === "xauth") {
    _$jscoverage['tbase.js'][459]++;
    data.x_auth_username = user.username;
    _$jscoverage['tbase.js'][460]++;
    data.x_auth_password = user.password;
    _$jscoverage['tbase.js'][461]++;
    data.x_auth_mode = "client_auth";
  }
  _$jscoverage['tbase.js'][463]++;
  this.send_request(url, params, (function (err, token) {
  _$jscoverage['tbase.js'][464]++;
  if (err) {
    _$jscoverage['tbase.js'][465]++;
    return callback(err);
  }
  _$jscoverage['tbase.js'][467]++;
  token = querystring.parse(token);
  _$jscoverage['tbase.js'][468]++;
  token.blogtype = user.blogtype;
  _$jscoverage['tbase.js'][469]++;
  callback(null, token);
}));
  _$jscoverage['tbase.js'][471]++;
  return this;
});
_$jscoverage['tbase.js'][474]++;
TBase.prototype.apply_auth = (function (url, args, user) {
  _$jscoverage['tbase.js'][475]++;
  user.authtype = user.authtype || "oauth";
  _$jscoverage['tbase.js'][476]++;
  args.headers = args.headers || {};
  _$jscoverage['tbase.js'][477]++;
  if (user.authtype === "baseauth") {
    _$jscoverage['tbase.js'][478]++;
    if (user.username && user.password) {
      _$jscoverage['tbase.js'][479]++;
      args.headers.Authorization = urllib.make_base_auth_header(user.username, user.password);
    }
  }
  else {
    _$jscoverage['tbase.js'][481]++;
    if (user.authtype === "oauth" || user.authtype === "xauth") {
      _$jscoverage['tbase.js'][482]++;
      var accessor = {consumerSecret: this.config.secret};
      _$jscoverage['tbase.js'][486]++;
      if (user.oauth_token_secret) {
        _$jscoverage['tbase.js'][487]++;
        accessor.tokenSecret = user.oauth_token_secret;
      }
      _$jscoverage['tbase.js'][489]++;
      var parameters = {};
      _$jscoverage['tbase.js'][491]++;
      for (var k in args.data) {
        _$jscoverage['tbase.js'][492]++;
        parameters[k] = args.data[k];
        _$jscoverage['tbase.js'][493]++;
        if (k.substring(0, 6) === "oauth_") {
          _$jscoverage['tbase.js'][494]++;
          delete args.data[k];
        }
}
      _$jscoverage['tbase.js'][498]++;
      var message = {action: url, method: args.type, parameters: parameters};
      _$jscoverage['tbase.js'][503]++;
      message.parameters.oauth_consumer_key = this.config.appkey;
      _$jscoverage['tbase.js'][504]++;
      message.parameters.oauth_version = "1.0";
      _$jscoverage['tbase.js'][507]++;
      if (user.oauth_token) {
        _$jscoverage['tbase.js'][508]++;
        message.parameters.oauth_token = user.oauth_token;
      }
      _$jscoverage['tbase.js'][511]++;
      OAuth.setTimestampAndNonce(message);
      _$jscoverage['tbase.js'][514]++;
      OAuth.SignatureMethod.sign(message, accessor);
      _$jscoverage['tbase.js'][516]++;
      if (this.config.oauth_params_by_get) {
        _$jscoverage['tbase.js'][517]++;
        args.data = message.parameters;
      }
      else {
        _$jscoverage['tbase.js'][521]++;
        args.headers.Authorization = OAuth.getAuthorizationHeader(this.config.oauth_realm, message.parameters);
      }
    }
  }
});
_$jscoverage['tbase.js'][530]++;
TBase.prototype.get_result_items = (function (data, playload, args) {
  _$jscoverage['tbase.js'][531]++;
  throw new Error("Must override this method");
});
_$jscoverage['tbase.js'][534]++;
TBase.prototype.get_result_item = (function (data, playload, args) {
  _$jscoverage['tbase.js'][535]++;
  return data;
});
_$jscoverage['tbase.js'][538]++;
TBase.prototype.get_pagging_cursor = (function (data, playload, args) {
  _$jscoverage['tbase.js'][539]++;
  return ({});
});
_$jscoverage['tbase.js'][546]++;
TBase.prototype.format_result = (function (data, playload, args) {
  _$jscoverage['tbase.js'][549]++;
  var index = playload.indexOf("[]");
  _$jscoverage['tbase.js'][550]++;
  var isList = index > 0;
  _$jscoverage['tbase.js'][551]++;
  if (isList) {
    _$jscoverage['tbase.js'][552]++;
    var itemPlayload = playload.substring(0, index);
    _$jscoverage['tbase.js'][553]++;
    var items = this.get_result_items(data, itemPlayload, args) || [];
    _$jscoverage['tbase.js'][554]++;
    for (var i = 0; i < items.length; i++) {
      _$jscoverage['tbase.js'][555]++;
      items[i] = this.format_result_item(items[i], itemPlayload, args);
}
    _$jscoverage['tbase.js'][557]++;
    var result = {};
    _$jscoverage['tbase.js'][558]++;
    result.items = items;
    _$jscoverage['tbase.js'][560]++;
    result.cursor = this.get_pagging_cursor(data, itemPlayload, args);
    _$jscoverage['tbase.js'][561]++;
    return result;
  }
  _$jscoverage['tbase.js'][564]++;
  var item = this.get_result_item(data, playload, args);
  _$jscoverage['tbase.js'][565]++;
  return this.format_result_item(item, playload, args);
});
_$jscoverage['tbase.js'][568]++;
TBase.prototype.format_result_item = (function (data, playload, args) {
  _$jscoverage['tbase.js'][569]++;
  var method = "format_" + playload;
  _$jscoverage['tbase.js'][570]++;
  return this[method](data, args);
});
_$jscoverage['tbase.js'][573]++;
TBase.prototype.format_search_status = (function (status, args) {
  _$jscoverage['tbase.js'][574]++;
  throw new Error("Must override this method.");
});
_$jscoverage['tbase.js'][577]++;
TBase.prototype.format_status = (function (status, args) {
  _$jscoverage['tbase.js'][578]++;
  throw new Error("Must override this method.");
});
_$jscoverage['tbase.js'][581]++;
TBase.prototype.format_user = (function (user, args) {
  _$jscoverage['tbase.js'][582]++;
  throw new Error("Must override this method.");
});
_$jscoverage['tbase.js'][585]++;
TBase.prototype.format_comment = (function (comment, args) {
  _$jscoverage['tbase.js'][586]++;
  throw new Error("Must override this method.");
});
_$jscoverage['tbase.js'][589]++;
TBase.prototype.format_message = (function (message, args) {
  _$jscoverage['tbase.js'][590]++;
  throw new Error("Must override this method.");
});
_$jscoverage['tbase.js'][593]++;
TBase.prototype.format_emotion = (function (emotion, args) {
  _$jscoverage['tbase.js'][594]++;
  throw new Error("Must override this method.");
});
_$jscoverage['tbase.js'][597]++;
TBase.prototype.format_access_token = (function (token) {
  _$jscoverage['tbase.js'][598]++;
  return querystring.parse(token);
});
_$jscoverage['tbase.js'][601]++;
TBase.prototype.format_count = (function (count, args) {
  _$jscoverage['tbase.js'][602]++;
  throw new Error("Must override this method.");
});
_$jscoverage['tbase.js'][605]++;
TBase.prototype.format_favorite = (function (favorite, args) {
  _$jscoverage['tbase.js'][606]++;
  throw new Error("Must override this method.");
});
_$jscoverage['tbase.js'][613]++;
TBase.prototype.convert_cursor = (function (cursor) {
  _$jscoverage['tbase.js'][614]++;
  return cursor;
});
_$jscoverage['tbase.js'][617]++;
TBase.prototype.convert_status = (function (status) {
  _$jscoverage['tbase.js'][618]++;
  return status;
});
_$jscoverage['tbase.js'][621]++;
TBase.prototype.convert_comment = (function (comment) {
  _$jscoverage['tbase.js'][622]++;
  return comment;
});
_$jscoverage['tbase.js'][625]++;
TBase.prototype.convert_user = (function (data) {
  _$jscoverage['tbase.js'][626]++;
  return data;
});
_$jscoverage['tbase.js'][629]++;
TBase.prototype.convert_ids = (function (ids) {
  _$jscoverage['tbase.js'][630]++;
  return ({ids: ids});
});
_$jscoverage['tbase.js'][633]++;
TBase.prototype.convert_favorite = (function (id) {
  _$jscoverage['tbase.js'][634]++;
  return ({id: id});
});
_$jscoverage['tbase.js'][641]++;
TBase.prototype.verify_credentials = (function (user, callback) {
  _$jscoverage['tbase.js'][642]++;
  var params = {type: "GET", user: user, playload: "user", request_method: "verify_credentials"};
  _$jscoverage['tbase.js'][648]++;
  var url = this.config.verify_credentials;
  _$jscoverage['tbase.js'][649]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][650]++;
  return this;
});
_$jscoverage['tbase.js'][653]++;
TBase.prototype.user_show = (function (user, uid, screen_name, callback) {
  _$jscoverage['tbase.js'][654]++;
  var data = {};
  _$jscoverage['tbase.js'][655]++;
  if (uid) {
    _$jscoverage['tbase.js'][656]++;
    data.uid = uid;
  }
  _$jscoverage['tbase.js'][658]++;
  if (screen_name) {
    _$jscoverage['tbase.js'][659]++;
    data.screen_name = screen_name;
    _$jscoverage['tbase.js'][660]++;
    delete data.uid;
  }
  _$jscoverage['tbase.js'][662]++;
  data = this.convert_user(data);
  _$jscoverage['tbase.js'][663]++;
  var params = {type: "GET", user: user, data: data, playload: "user", request_method: "user_show"};
  _$jscoverage['tbase.js'][670]++;
  var url = this.config.user_show;
  _$jscoverage['tbase.js'][671]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][672]++;
  return this;
});
_$jscoverage['tbase.js'][679]++;
TBase.prototype.update = (function (user, status, callback) {
  _$jscoverage['tbase.js'][680]++;
  status = this.convert_status(status);
  _$jscoverage['tbase.js'][681]++;
  var params = {type: "POST", playload: "status", user: user, data: status, request_method: "update"};
  _$jscoverage['tbase.js'][688]++;
  var url = this.config.update;
  _$jscoverage['tbase.js'][689]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][690]++;
  return this;
});
_$jscoverage['tbase.js'][693]++;
TBase.prototype.upload = (function (user, status, pic, callback) {
  _$jscoverage['tbase.js'][694]++;
  status = this.convert_status(status);
  _$jscoverage['tbase.js'][695]++;
  pic.name = pic.name || "node-weibo-upload-image.jpg";
  _$jscoverage['tbase.js'][696]++;
  if (! pic.content_type) {
    _$jscoverage['tbase.js'][697]++;
    pic.content_type = utils.mimeLookup(pic.name);
  }
  _$jscoverage['tbase.js'][699]++;
  if (Buffer.isBuffer(pic.data)) {
    _$jscoverage['tbase.js'][700]++;
    this._upload(user, status, pic, callback);
    _$jscoverage['tbase.js'][701]++;
    return this;
  }
  _$jscoverage['tbase.js'][703]++;
  var buffers = [];
  _$jscoverage['tbase.js'][704]++;
  var size = 0;
  _$jscoverage['tbase.js'][705]++;
  var self = this;
  _$jscoverage['tbase.js'][706]++;
  pic.data.on("data", (function (chunk) {
  _$jscoverage['tbase.js'][707]++;
  size += chunk.length;
  _$jscoverage['tbase.js'][708]++;
  buffers.push(chunk);
}));
  _$jscoverage['tbase.js'][710]++;
  pic.data.once("end", (function () {
  _$jscoverage['tbase.js'][711]++;
  pic.data = Buffer.concat(buffers, size);
  _$jscoverage['tbase.js'][712]++;
  self._upload(user, status, pic, callback);
}));
  _$jscoverage['tbase.js'][714]++;
  pic.data.once("error", (function (err) {
  _$jscoverage['tbase.js'][715]++;
  callback(err);
}));
  _$jscoverage['tbase.js'][717]++;
  return this;
});
_$jscoverage['tbase.js'][720]++;
TBase.prototype._upload = (function (user, data, pic, callback) {
  _$jscoverage['tbase.js'][721]++;
  var auth_args = {type: "post", data: {}, headers: {}};
  _$jscoverage['tbase.js'][726]++;
  var pic_field = this.config.pic_field || "pic";
  _$jscoverage['tbase.js'][727]++;
  var boundary = "boundary" + Date.now();
  _$jscoverage['tbase.js'][729]++;
  var dashdash = "--";
  _$jscoverage['tbase.js'][730]++;
  var crlf = "\r\n";
  _$jscoverage['tbase.js'][733]++;
  var builder = "";
  _$jscoverage['tbase.js'][735]++;
  builder += dashdash;
  _$jscoverage['tbase.js'][736]++;
  builder += boundary;
  _$jscoverage['tbase.js'][737]++;
  builder += crlf;
  _$jscoverage['tbase.js'][739]++;
  var key;
  _$jscoverage['tbase.js'][740]++;
  for (key in data) {
    _$jscoverage['tbase.js'][741]++;
    var value = this.url_encode(data[key]);
    _$jscoverage['tbase.js'][742]++;
    auth_args.data[key] = value;
}
  _$jscoverage['tbase.js'][745]++;
  var api = this.config.host;
  _$jscoverage['tbase.js'][746]++;
  var url = api + this.config.upload + this.config.result_format;
  _$jscoverage['tbase.js'][749]++;
  this.apply_auth(url, auth_args, user);
  _$jscoverage['tbase.js'][751]++;
  for (key in auth_args.data) {
    _$jscoverage['tbase.js'][753]++;
    builder += "Content-Disposition: form-data; name=\"" + key + "\"";
    _$jscoverage['tbase.js'][754]++;
    builder += crlf;
    _$jscoverage['tbase.js'][755]++;
    builder += crlf;
    _$jscoverage['tbase.js'][757]++;
    builder += auth_args.data[key];
    _$jscoverage['tbase.js'][758]++;
    builder += crlf;
    _$jscoverage['tbase.js'][761]++;
    builder += dashdash;
    _$jscoverage['tbase.js'][762]++;
    builder += boundary;
    _$jscoverage['tbase.js'][763]++;
    builder += crlf;
}
  _$jscoverage['tbase.js'][766]++;
  builder += "Content-Disposition: form-data; name=\"" + pic_field + "\"";
  _$jscoverage['tbase.js'][768]++;
  builder += "; filename=\"" + this.url_encode(pic.name) + "\"";
  _$jscoverage['tbase.js'][769]++;
  builder += crlf;
  _$jscoverage['tbase.js'][771]++;
  builder += "Content-Type: " + pic.content_type + ";";
  _$jscoverage['tbase.js'][772]++;
  builder += crlf;
  _$jscoverage['tbase.js'][773]++;
  builder += crlf;
  _$jscoverage['tbase.js'][775]++;
  var endstr = crlf + dashdash + boundary + dashdash + crlf;
  _$jscoverage['tbase.js'][776]++;
  var builderLength = Buffer.byteLength(builder);
  _$jscoverage['tbase.js'][777]++;
  var size = builderLength + pic.data.length + endstr.length;
  _$jscoverage['tbase.js'][778]++;
  var buffer = new Buffer(size);
  _$jscoverage['tbase.js'][779]++;
  var offset = 0;
  _$jscoverage['tbase.js'][780]++;
  buffer.write(builder);
  _$jscoverage['tbase.js'][781]++;
  offset += builderLength;
  _$jscoverage['tbase.js'][782]++;
  pic.data.copy(buffer, offset);
  _$jscoverage['tbase.js'][783]++;
  offset += pic.data.length;
  _$jscoverage['tbase.js'][784]++;
  buffer.write(endstr, offset);
  _$jscoverage['tbase.js'][794]++;
  auth_args.headers["Content-Type"] = "multipart/form-data;boundary=" + boundary;
  _$jscoverage['tbase.js'][795]++;
  var params = {type: "POST", playload: "status", content: buffer, headers: auth_args.headers, request_method: "upload"};
  _$jscoverage['tbase.js'][802]++;
  this.request(url, params, callback);
  _$jscoverage['tbase.js'][803]++;
  return this;
});
_$jscoverage['tbase.js'][806]++;
TBase.prototype.repost = (function (user, id, status, callback) {
  _$jscoverage['tbase.js'][807]++;
  status.id = id;
  _$jscoverage['tbase.js'][808]++;
  status = this.convert_status(status);
  _$jscoverage['tbase.js'][809]++;
  var params = {type: "POST", playload: "status", user: user, data: status, request_method: "repost"};
  _$jscoverage['tbase.js'][816]++;
  var url = this.config.repost;
  _$jscoverage['tbase.js'][817]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][818]++;
  return this;
});
_$jscoverage['tbase.js'][821]++;
TBase.prototype.destroy = (function (user, id, callback) {
  _$jscoverage['tbase.js'][822]++;
  var params = {type: "POST", playload: "status", user: user, data: {id: id}, request_method: "destroy"};
  _$jscoverage['tbase.js'][829]++;
  var url = this.config.destroy;
  _$jscoverage['tbase.js'][830]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][831]++;
  return this;
});
_$jscoverage['tbase.js'][834]++;
TBase.prototype.show = (function (user, id, callback) {
  _$jscoverage['tbase.js'][835]++;
  var params = {type: "GET", playload: "status", user: user, data: {id: id}, request_method: "show"};
  _$jscoverage['tbase.js'][844]++;
  var url = this.config.show;
  _$jscoverage['tbase.js'][845]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][846]++;
  return this;
});
_$jscoverage['tbase.js'][849]++;
TBase.prototype.count = (function (user, ids, callback) {
  _$jscoverage['tbase.js'][850]++;
  var data = this.convert_ids(ids);
  _$jscoverage['tbase.js'][851]++;
  var params = {type: "GET", playload: "count[]", user: user, data: data, request_method: "count"};
  _$jscoverage['tbase.js'][858]++;
  var url = this.config.count;
  _$jscoverage['tbase.js'][859]++;
  this.send_request(url, params, (function (err, result) {
  _$jscoverage['tbase.js'][860]++;
  if (err) {
    _$jscoverage['tbase.js'][861]++;
    return callback(err);
  }
  _$jscoverage['tbase.js'][863]++;
  callback(null, result.items);
}));
  _$jscoverage['tbase.js'][865]++;
  return this;
});
_$jscoverage['tbase.js'][868]++;
TBase.prototype.home_timeline = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][869]++;
  return this._timeline("home_timeline", user, cursor, callback);
});
_$jscoverage['tbase.js'][872]++;
TBase.prototype.user_timeline = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][873]++;
  return this._timeline("user_timeline", user, cursor, callback);
});
_$jscoverage['tbase.js'][876]++;
TBase.prototype.public_timeline = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][877]++;
  return this._timeline("public_timeline", user, cursor, callback);
});
_$jscoverage['tbase.js'][880]++;
TBase.prototype.mentions = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][881]++;
  return this._timeline("mentions", user, cursor, callback);
});
_$jscoverage['tbase.js'][884]++;
TBase.prototype.repost_timeline = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][885]++;
  return this._timeline("repost_timeline", user, cursor, callback);
});
_$jscoverage['tbase.js'][888]++;
TBase.prototype.search = (function (user, query, cursor, callback) {
  _$jscoverage['tbase.js'][889]++;
  cursor = cursor || {};
  _$jscoverage['tbase.js'][890]++;
  cursor.count = cursor.count || 20;
  _$jscoverage['tbase.js'][891]++;
  cursor = this.convert_cursor(cursor);
  _$jscoverage['tbase.js'][892]++;
  query = utils.extend(query, cursor);
  _$jscoverage['tbase.js'][893]++;
  var params = {type: "GET", playload: "status[]", user: user, data: query, request_method: "search"};
  _$jscoverage['tbase.js'][900]++;
  var url = this.config.search;
  _$jscoverage['tbase.js'][901]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][902]++;
  return this;
});
_$jscoverage['tbase.js'][909]++;
TBase.prototype.favorites = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][910]++;
  return this._timeline("favorites", user, cursor, callback, "favorite[]");
});
_$jscoverage['tbase.js'][913]++;
TBase.prototype.favorite_request = (function (type, name, user, id, callback) {
  _$jscoverage['tbase.js'][914]++;
  var data = this.convert_favorite(id);
  _$jscoverage['tbase.js'][915]++;
  var params = {type: type, playload: "favorite", user: user, data: data, request_method: name};
  _$jscoverage['tbase.js'][922]++;
  var url = this.config[name];
  _$jscoverage['tbase.js'][923]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][924]++;
  return this;
});
_$jscoverage['tbase.js'][927]++;
TBase.prototype.favorite_show = (function (user, id, callback) {
  _$jscoverage['tbase.js'][928]++;
  return this.favorite_request("GET", "favorite_show", user, id, callback);
});
_$jscoverage['tbase.js'][931]++;
TBase.prototype.favorite_create = (function (user, id, callback) {
  _$jscoverage['tbase.js'][932]++;
  return this.favorite_request("POST", "favorite_create", user, id, callback);
});
_$jscoverage['tbase.js'][935]++;
TBase.prototype.favorite_destroy = (function (user, id, callback) {
  _$jscoverage['tbase.js'][936]++;
  return this.favorite_request("POST", "favorite_destroy", user, id, callback);
});
_$jscoverage['tbase.js'][943]++;
TBase.prototype.comments = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][944]++;
  return this._timeline("comments", user, cursor, callback, "comment[]");
});
_$jscoverage['tbase.js'][947]++;
TBase.prototype.comments_timeline = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][948]++;
  return this._timeline("comments_timeline", user, cursor, callback, "comment[]");
});
_$jscoverage['tbase.js'][951]++;
TBase.prototype.comments_mentions = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][952]++;
  return this._timeline("comments_mentions", user, cursor, callback, "comment[]");
});
_$jscoverage['tbase.js'][955]++;
TBase.prototype.comments_to_me = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][956]++;
  return this._timeline("comments_to_me", user, cursor, callback, "comment[]");
});
_$jscoverage['tbase.js'][959]++;
TBase.prototype.comments_by_me = (function (user, cursor, callback) {
  _$jscoverage['tbase.js'][960]++;
  return this._timeline("comments_by_me", user, cursor, callback, "comment[]");
});
_$jscoverage['tbase.js'][963]++;
TBase.prototype.comment_create = (function (user, id, comment, callback) {
  _$jscoverage['tbase.js'][964]++;
  comment.id = id;
  _$jscoverage['tbase.js'][965]++;
  comment = this.convert_comment(comment);
  _$jscoverage['tbase.js'][966]++;
  var params = {type: "POST", playload: "comment", user: user, data: comment, request_method: "comment_create"};
  _$jscoverage['tbase.js'][973]++;
  var url = this.config.comment_create;
  _$jscoverage['tbase.js'][974]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][975]++;
  return this;
});
_$jscoverage['tbase.js'][978]++;
TBase.prototype.comment_reply = (function (user, cid, id, comment, callback) {
  _$jscoverage['tbase.js'][979]++;
  comment.id = id;
  _$jscoverage['tbase.js'][980]++;
  comment.cid = cid;
  _$jscoverage['tbase.js'][981]++;
  comment = this.convert_comment(comment);
  _$jscoverage['tbase.js'][982]++;
  var params = {type: "POST", playload: "comment", user: user, data: comment, request_method: "comment_reply"};
  _$jscoverage['tbase.js'][989]++;
  var url = this.config.comment_reply;
  _$jscoverage['tbase.js'][990]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][991]++;
  return this;
});
_$jscoverage['tbase.js'][994]++;
TBase.prototype.comment_destroy = (function (user, cid, callback) {
  _$jscoverage['tbase.js'][995]++;
  var comment = {cid: cid};
  _$jscoverage['tbase.js'][996]++;
  comment = this.convert_comment(comment);
  _$jscoverage['tbase.js'][997]++;
  var params = {type: "POST", playload: "comment", user: user, data: comment, request_method: "comment_destroy"};
  _$jscoverage['tbase.js'][1004]++;
  var url = this.config.comment_destroy;
  _$jscoverage['tbase.js'][1005]++;
  this.send_request(url, params, callback);
  _$jscoverage['tbase.js'][1006]++;
  return this;
});
_$jscoverage['tbase.js'].source = ["/*!"," * node-weibo - lib/tbase.js"," * Copyright(c) 2012 fengmk2 &lt;fengmk2@gmail.com&gt;"," * MIT Licensed"," */","","\"use strict\";","","/**"," * Module dependencies."," */","","var querystring = require('querystring');","var urllib = require('urllib');","var utils = require('./utils');","var OAuth = require('./oauth');","var emoji = require('emoji');","","/**"," * TAPI Base class, support OAuth v1.0"," */","function TBase() {","  this.config = {","    host: 'api start url',","    result_format: '.json',","    appkey: '',","    secret: '',","    oauth_host: '',","    oauth_callback: 'oob or url',","    oauth_version: '1.0',","    ","    userinfo_has_counts: true, // &#231;&#148;&#168;&#230;&#136;&#183;&#228;&#191;&#161;&#230;&#129;&#175;&#228;&#184;&#173;&#230;&#152;&#175;&#229;&#144;&#166;&#229;&#140;&#133;&#229;&#144;&#171;&#231;&#178;&#137;&#228;&#184;&#157;&#230;&#149;&#176;&#227;&#128;&#129;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#149;&#176;&#231;&#173;&#137;&#228;&#191;&#161;&#230;&#129;&#175;","    support_counts: true, // &#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#230;&#137;&#185;&#233;&#135;&#143;&#232;&#142;&#183;&#229;&#143;&#150;&#232;&#189;&#172;&#229;&#143;&#145;&#229;&#146;&#140;&#232;&#175;&#132;&#232;&#174;&#186;&#230;&#149;&#176;","    support_comment: true, // &#229;&#136;&#164;&#230;&#150;&#173;&#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#232;&#175;&#132;&#232;&#174;&#186;&#229;&#136;&#151;&#232;&#161;&#168;","    support_do_comment: true, // &#229;&#136;&#164;&#230;&#150;&#173;&#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#229;&#143;&#145;&#233;&#128;&#129;&#232;&#175;&#132;&#232;&#174;&#186;","    support_repost_comment: true, // &#229;&#136;&#164;&#230;&#150;&#173;&#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#232;&#189;&#172;&#229;&#143;&#145;&#229;&#144;&#140;&#230;&#151;&#182;&#229;&#143;&#145;&#232;&#175;&#132;&#232;&#174;&#186;","    support_repost_comment_to_root: false, // &#229;&#136;&#164;&#230;&#150;&#173;&#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#232;&#189;&#172;&#229;&#143;&#145;&#229;&#144;&#140;&#230;&#151;&#182;&#231;&#187;&#153;&#229;&#142;&#159;&#230;&#150;&#135;&#228;&#189;&#156;&#232;&#128;&#133;&#229;&#143;&#145;&#232;&#175;&#132;&#232;&#174;&#186;","    support_upload: true, // &#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#228;&#184;&#138;&#228;&#188;&#160;&#229;&#155;&#190;&#231;&#137;&#135;","    support_repost: true, // &#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#230;&#150;&#176;&#230;&#181;&#170;&#229;&#189;&#162;&#229;&#188;&#143;&#232;&#189;&#172;&#232;&#189;&#189;","    repost_pre: '&#232;&#189;&#172;:', // &#232;&#189;&#172;&#229;&#143;&#145;&#229;&#137;&#141;&#231;&#188;&#128;","    repost_delimiter: '//', //&#232;&#189;&#172;&#229;&#143;&#145;&#231;&#154;&#132;&#229;&#136;&#134;&#233;&#154;&#148;&#231;&#172;&#166;","    image_shorturl_pre: ' [&#229;&#155;&#190;] ', // RT&#229;&#155;&#190;&#231;&#137;&#135;&#231;&#188;&#169;&#229;&#157;&#128;&#229;&#137;&#141;&#231;&#188;&#128;","    support_favorites: true, // &#229;&#136;&#164;&#230;&#150;&#173;&#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#230;&#148;&#182;&#232;&#151;&#143;&#229;&#136;&#151;&#232;&#161;&#168;","    support_do_favorite: true, // &#229;&#136;&#164;&#230;&#150;&#173;&#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#230;&#148;&#182;&#232;&#151;&#143;&#229;&#138;&#159;&#232;&#131;&#189;","    support_geo: true, //&#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#229;&#156;&#176;&#231;&#144;&#134;&#228;&#189;&#141;&#231;&#189;&#174;&#228;&#191;&#161;&#230;&#129;&#175;&#228;&#184;&#138;&#228;&#188;&#160;","    // &#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;max_id &#229;&#136;&#134;&#233;&#161;&#181;","    support_max_id: true,","    support_destroy_msg: true, //&#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#229;&#136;&#160;&#233;&#153;&#164;&#231;&#167;&#129;&#228;&#191;&#161;","    support_direct_messages: true, ","    support_sent_direct_messages: true, //&#230;&#152;&#175;&#229;&#144;&#166;&#230;&#148;&#175;&#230;&#140;&#129;&#232;&#135;&#170;&#229;&#183;&#177;&#229;&#143;&#145;&#233;&#128;&#129;&#231;&#154;&#132;&#231;&#167;&#129;&#228;&#191;&#161;","    support_mentions: true, ","    support_friendships_create: true,","    support_search: true,","    support_search_max_id: false,","    support_favorites_max_id: false, // &#230;&#148;&#182;&#232;&#151;&#143;&#229;&#136;&#134;&#233;&#161;&#181;&#228;&#189;&#191;&#231;&#148;&#168;max_id","    ","    need_processMsg: true, //&#230;&#152;&#175;&#229;&#144;&#166;&#233;&#156;&#128;&#232;&#166;&#129;&#229;&#164;&#132;&#231;&#144;&#134;&#230;&#182;&#136;&#230;&#129;&#175;&#231;&#154;&#132;&#229;&#134;&#133;&#229;&#174;&#185;","    comment_need_user_id: false, // &#232;&#175;&#132;&#232;&#174;&#186;&#230;&#152;&#175;&#229;&#144;&#166;&#233;&#156;&#128;&#232;&#166;&#129;&#228;&#189;&#191;&#231;&#148;&#168;&#229;&#136;&#176;&#231;&#148;&#168;&#230;&#136;&#183;id&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#228;&#184;&#186;false&#239;&#188;&#140;&#229;&#133;&#188;&#229;&#174;&#185;&#230;&#137;&#128;&#230;&#156;&#137;&#230;&#151;&#167;&#230;&#142;&#165;&#229;&#143;&#163;","        ","    // api","    public_timeline:      '/statuses/public_timeline',","    home_timeline:        '/statuses/home_timeline',","    user_timeline:        '/statuses/user_timeline',","    mentions:             '/statuses/mentions',","    comments_timeline:    '/comments/timeline',","    comments_mentions:    '/comments/mentions',","    comments_to_me:       '/comments/to_me',","    comments_by_me:       '/comments/by_me',","","    repost_timeline:      '/statuses/repost_timeline',","    comments:             '/statuses/comments',","","    show:                 '/statuses/show',","    count:                '/statuses/count',","    update:               '/statuses/update',","    upload:               '/statuses/upload',","    repost:               '/statuses/repost',","    destroy:              '/statuses/destroy',","","    followers:            '/statuses/followers',","    friends:              '/statuses/friends',","    favorites:            '/favorites',","    favorite_show:        '/favorites/show',","    favorite_create:      '/favorites/create',","    favorite_destroy:     '/favorites/destroy',","    ","    comment_create:       '/statuses/comment',","    comment_reply:        '/statuses/reply',","    comment_destroy:      '/statuses/comment_destroy',","    ","    destroy_msg:          '/direct_messages/destroy/{{id}}',","    direct_messages:      '/direct_messages', ","    sent_direct_messages: '/direct_messages/sent', //&#232;&#135;&#170;&#229;&#183;&#177;&#229;&#143;&#145;&#233;&#128;&#129;&#231;&#154;&#132;&#231;&#167;&#129;&#228;&#191;&#161;&#229;&#136;&#151;&#232;&#161;&#168;&#239;&#188;&#140;&#230;&#136;&#145;&#229;&#189;&#147;&#230;&#151;&#182;&#228;&#184;&#186;&#228;&#187;&#128;&#228;&#185;&#136;&#232;&#166;&#129;&#229;&#145;&#189;&#229;&#144;&#141;&#228;&#184;&#186;sent_direct_messages&#230;&#141;&#143;&#239;&#188;&#140;&#230;&#136;&#145;&#230;&#147;&#166;","    new_message:          '/direct_messages/new',","    verify_credentials:   '/account/verify_credentials',","    user_show:            '/users/show',","    rate_limit_status:    '/account/rate_limit_status',","    friendships_create:   '/friendships/create',","    friendships_destroy:  '/friendships/destroy',","    friendships_show:     '/friendships/show',","    reset_count:          '/statuses/reset_count',","    emotions:             '/emotions',","    ","    // &#231;&#148;&#168;&#230;&#136;&#183;&#230;&#160;&#135;&#231;&#173;&#190;","    tags:                 '/tags',","    create_tag:           '/tags/create',","    destroy_tag:          '/tags/destroy',","    tags_suggestions:     '/tags/suggestions',","    ","    // &#230;&#144;&#156;&#231;&#180;&#162;","    search:               '/statuses/search',","    user_search:          '/users/search',","    ","    oauth_authorize:      '/oauth/authorize',","    oauth_request_token:  '/oauth/request_token',","    oauth_access_token:   '/oauth/access_token',","    ","    // &#229;&#155;&#190;&#231;&#137;&#135;&#228;&#184;&#138;&#228;&#188;&#160;&#229;&#173;&#151;&#230;&#174;&#181;&#229;&#144;&#141;&#231;&#167;&#176;","    pic_field: 'pic',","  };","}","","module.exports = TBase;","","TBase.prototype.init = function (config) {","  for (var k in config) {","    this.config[k] = config[k];","  }","};","","/**"," * Utils methods"," */","","TBase.prototype.URL_RE = new RegExp('(?:\\\\[url\\\\s*=\\\\s*|)((?:www\\\\.|http[s]?://)[\\\\w\\\\.\\\\?%&amp;\\\\-/#=;:!\\\\+~]+)(?:\\\\](.+)\\\\[/url\\\\]|)', 'ig');","","TBase.prototype.process_text = function (status) {","  var text = status.text;","  if (!text) {","    return '&amp;nbsp;';","  }","  text = utils.escape(text);","  text = text.replace(this.URL_RE, this._replace_url);","  ","  text = this.process_at(text, status); //@***","","  text = this.process_emotional(text, status); ","","  text = this.process_search(text, status); //#xxXX#","  ","  text = emoji.unifiedToHTML(emoji.softbankToUnified(text));","  return text || '&amp;nbsp;';","};","","TBase.prototype._replace_url = function (m, g1, g2) {","  var url = g1;","  if (g1.indexOf('http') !== 0) {","    url = 'http://' + g1;","  }","  var tpl = '&lt;a target=\"_blank\" class=\"link\" href=\"{{url}}\"&gt;{{value}}&lt;/a&gt;';","  return utils.format(tpl, { url: url, title: g1, value: g2 || g1 });","};","","TBase.prototype.SearchMatchReg = /#([^#]+)#/g;","TBase.prototype.process_search = function (text, status) {","  var url = this.config.search_url;","  return text.replace(this.SearchMatchReg, function (m, g1) {","    // fixed #xxx@xxx# nesting problem","    var search = utils.removeHTML(g1);","    var tpl = '&lt;a target=\"_blank\" href=\"{{url}}{{searchEncode}}\" title=\"Search #{{search}}#\"&gt;#{{search}}#&lt;/a&gt;';","    return utils.format(tpl, {search: search, searchEncode: encodeURIComponent(search), url: url});","  });","};","","// // return [[hash1, hash_value], ..., [#xxx#, xxx]]","// TBase.prototype.findSearchText = function (text, status) {","//   var matchs = text.match(this.SearchMatchReg);","//   var result = [];","//   if (matchs) {","//     for (var i = 0, len = matchs.length; i &lt; len; i++) {","//       var s = matchs[i];","//       result.push([s, s.substring(1, s.length - 1)]);","//     }","//   }","//   return result;","// };","","// TBase.prototype.formatSearchText = function (str) { // &#230;&#160;&#188;&#229;&#188;&#143;&#229;&#140;&#150;&#228;&#184;&#187;&#233;&#162;&#152;","//     return '#' + str.trim() + '#';","// };","","TBase.prototype._at_match_rex = /@([&#226;&#151;&#143;\\w\\-\\_\\u2E80-\\u3000\\u303F-\\u9FFF]+)/g;","TBase.prototype.process_at = function (text, status) { ","  // Handle no-ascii","  //@*** u4e00-\\u9fa5:&#228;&#184;&#173;&#230;&#150;&#135;&#229;&#173;&#151;&#231;&#172;&#166; \\u2E80-\\u9FFF:&#228;&#184;&#173;&#230;&#151;&#165;&#233;&#159;&#169;&#229;&#173;&#151;&#231;&#172;&#166;","  //&#227;&#128;&#144;&#232;&#167;&#130;&#231;&#130;&#185;&#194;&#183;@&#228;&#187;&#187;&#229;&#191;&#151;&#229;&#188;&#186;&#227;&#128;&#145;&#228;&#187;&#138;&#229;&#185;&#180;&#230;&#143;&#144;&#229;&#135;&#186;&#231;&#154;&#132;1000&#228;&#184;&#135;&#229;&#165;&#151;&#231;&#154;&#132;&#228;&#191;&#157;&#233;&#154;&#156;&#230;&#136;&#191;&#228;&#187;&#187;&#229;&#138;&#161;&#229;&#143;&#175;&#232;&#131;&#189;&#230;&#160;&#185;&#230;&#156;&#172;&#229;&#174;&#140;&#228;&#184;&#141;&#230;&#136;&#144;","  // http://blog.oasisfeng.com/2006/10/19/full-cjk-unicode-range/","  // CJK&#230;&#160;&#135;&#231;&#130;&#185;&#231;&#172;&#166;&#229;&#143;&#183;&#239;&#188;&#154;3000-303F","  var homeurl = this.config.user_home_url;","  return text.replace(this._at_match_rex, function (m, g1) {","    var url = homeurl + encodeURIComponent(g1);","    return '&lt;a class=\"at-user-link\" href=\"' + url + '\"&gt;@' + g1 + '&lt;/a&gt;';","  });","};","","// // &#232;&#142;&#183;&#229;&#143;&#150;str&#233;&#135;&#140;&#233;&#157;&#162;&#230;&#137;&#128;&#230;&#156;&#137;@&#231;&#148;&#168;&#230;&#136;&#183;&#231;&#154;&#132;&#229;&#144;&#141;&#231;&#167;&#176;&#229;&#136;&#151;&#232;&#161;&#168;&#239;&#188;&#140;&#228;&#184;&#141;&#229;&#140;&#133;&#229;&#144;&#171;@&#231;&#172;&#166;&#229;&#144;&#136;","// find_at_users: function (str) {","//     if (!str) {","//         return null;","//     }","//     var matchs = str.match(this._at_match_rex);","//     if (matchs) {","//         var users = [];","//         for(var i = 0, l = matchs.length; i &lt; l; i++) {","//             var name = matchs[i].substring(1);","//             if(users.indexOf(name) &lt; 0) {","//                 users.push(name);","//             }","//         }","//         return users;","//     }","//     return null;","// },","","TBase.prototype.process_emotional = function (text, status) {","  return text.replace(/\\[([\\u4e00-\\u9fff,\\uff1f,\\w]{1,6})\\]/g, this._replace_emotional.bind(this));","};","","TBase.prototype.EMOTION_TPL = '&lt;img title=\"{{title}}\" src=\"{{src}}\" /&gt;';","","TBase.prototype._replace_emotional = function (m, g1) {","  if (!g1) {","    return m;","  }","  // if (!this.bgEmotions &amp;&amp; typeof getBackgroundView !== 'undefined') {","  //   this.bgEmotions = getBackgroundView().Emotions;","  //   if (this.bgEmotions) {","  //     this.bgEmotions = this.bgEmotions.weibo;","  //   }","  // }","  // var face = this.bgEmotions &amp;&amp; this.bgEmotions[g1];","  // if (!face) {","  //     face = TSINA_API_EMOTIONS[g1];","  //     if (face) {","  //         face = TSINA_FACE_URL_PRE + face;","  //     }","  // }","  // if (face) {","  //     return this.EMOTION_TPL.format({ title: m, src: face });","  // }","  return m;","};","","TBase.prototype.url_encode = function (text) {","  return encodeURIComponent(text);","};","","TBase.prototype._timeline = function (request_method, user, cursor, callback, playload) {","  cursor = this.convert_cursor(cursor);","  var params = {","    type: 'GET',","    playload: playload || 'status[]',","    user: user,","    data: cursor,","    request_method: request_method","  };","  var url = this.config[request_method];","  this.send_request(url, params, callback);","  return this;","};","","TBase.prototype.errorname = function (name) {","  // get_access_token =&gt; GetAccessTokenError","  name = name.replace(/(?:^\\w|\\_\\w)/g, function (m) {","    if (m.length === 2) {","      m = m.substring(1);","    }","    return m.toUpperCase();","  });","  return name + 'Error';","};","","TBase.prototype.detect_error = function (method, res, playload, data) {","  if (res.statusCode === 200) {","    return null;","  }","  var errMessage = null;","  if (method === 'get_request_token' || method === 'get_access_token') {","    var token = querystring.parse(data);","    if (token) {","      errMessage = 'Get request token error, ' + (token.error_CN || token.error || data);","    } else {","      errMessage = 'Get request token error, empty token string';","    }","  } else {","    errMessage = data.error_CN || data.error || data.message || data;","  }","  var err = new Error(errMessage);","  err.data = data;","  err.name = this.errorname(method);","  return err;","};","","/**"," * &#229;&#176;&#129;&#232;&#163;&#133;&#230;&#137;&#128;&#230;&#156;&#137;http&#232;&#175;&#183;&#230;&#177;&#130;&#239;&#188;&#140;&#232;&#135;&#170;&#229;&#138;&#168;&#229;&#140;&#186;&#229;&#136;&#134;&#229;&#164;&#132;&#231;&#144;&#134;http&#229;&#146;&#140;https"," * args: {"," *  data, "," *  type: 'GET | POST | DELETE', "," *  headers"," * }"," * callback.call(context, data, error, res || xhr)"," */","TBase.prototype.request = function (url, args, callback) {","  var playload = args.playload;","  if (playload !== 'string') {","    args.dataType = 'json';","  }","  var self = this;","  urllib.request(url, args, function (err, data, res) {","    if (err) {","      return callback(err);","    }","    if (playload === 'string') {","      data = data.toString();","    }","    // console.log(url, args, res.headers, res.statusCode, data)","    // console.log(data.data)","    err = self.detect_error(args.request_method, res, playload, data);","    if (err) {","      return callback(err);","    }","    if (playload === 'string') {","      return callback(null, data);","    }","    callback(null, this.format_result(data, playload, args));","  }, this);","};","","TBase.prototype.send_request = function (url, params, callback) {","  var args = {","    type: 'GET', ","    playload: 'status', ","    headers: {}","  };","  for (var k in params) {","    args[k] = params[k];","  }","  args.type = (args.type || 'GET').toUpperCase();","  args.data = args.data || {};","","  var user = args.user || args.data.user || {};","  args.user = user;","  if (args.data &amp;&amp; args.data.user) {","    delete args.data.user;","  }","","  var api = args.api_host || this.config.host;","  if (args.api_host) {","    delete args.api_host;","  }","  ","  url = api + utils.format(url, function (m, key) {","    var val = args.data[key];","    // delete the no need params.","    delete args.data[key];","    return val;","  });","","  if (args.playload !== 'string' &amp;&amp; this.config.result_format) {","    url += this.config.result_format;","  }","","  this.apply_auth(url, args, user);","  if (args.type === 'POST') {","    args.headers['Content-Type'] = args.content_type || 'application/x-www-form-urlencoded;charset=UTF-8;';","  }","  this.request(url, args, callback);","};","","/**"," * OAuth"," */","","TBase.prototype.format_authorization_url = function (params) {","  var login_url = (this.config.oauth_host || this.config.host) + this.config.oauth_authorize;","  return OAuth.addToURL(login_url, params);","};","","TBase.prototype.get_authorization_url = function (user, callback) {","  var self = this;","  self.get_request_token(user, function (err, token) {","    var info = null;","    if (err) {","      return callback(err);","    }","    if (token) {","      var params = {","        oauth_token: token.oauth_token,","        oauth_callback: user.oauth_callback || self.config.oauth_callback","      };","      info = token;","      info.blogtype = user.blogtype;","      info.auth_url = self.format_authorization_url(params);","    }","    callback(err, info);","  });","  return this;","};","","TBase.prototype.get_request_token = function (user, callback) {","  var self = this;","  var url = self.config.oauth_request_token;","  var params = {","    type: 'GET',","    user: user,","    playload: 'string',","    data: {","      oauth_callback: user.oauth_callback || self.config.oauth_callback","    },","    api_host: self.config.oauth_host,","    request_method: 'get_request_token'","  };","  if (self.config.oauth_request_params) {","    utils.extend(params.data, self.config.oauth_request_params);","  }","  self.send_request(url, params, function (err, token) {","    if (err) {","      return callback(err);","    }","    token = self.format_access_token(token);","    token.blogtype = user.blogtype;","    callback(null, token);","  });","  return this;","},","","// user must contain oauth_pin or oauth_verifier","TBase.prototype.get_access_token = function (user, callback) {","  if (!user.authtype) {","    user.authtype = 'oauth';","  }","  var url = this.config.oauth_access_token;","  var data = {};","  var params = {","    type: 'GET',","    user: user,","    playload: 'string',","    data: data,","    api_host: this.config.oauth_host,","    request_method: 'get_access_token'","  };","  var oauth_verifier = user.oauth_pin || user.oauth_verifier || 'no_verifier';","  if (oauth_verifier) {","    data.oauth_verifier = oauth_verifier;","    delete user.oauth_pin;","    delete user.oauth_verifier;","  }","  if (user.authtype === 'xauth') {","    data.x_auth_username = user.username;","    data.x_auth_password = user.password;","    data.x_auth_mode = \"client_auth\";","  }","  this.send_request(url, params, function (err, token) {","    if (err) {","      return callback(err);","    }","    token = querystring.parse(token);","    token.blogtype = user.blogtype;","    callback(null, token);","  });","  return this;","};","","TBase.prototype.apply_auth = function (url, args, user) {","  user.authtype = user.authtype || 'oauth';","  args.headers = args.headers || {};","  if (user.authtype === 'baseauth') {","    if (user.username &amp;&amp; user.password) {","      args.headers.Authorization = urllib.make_base_auth_header(user.username, user.password);","    }","  } else if (user.authtype === 'oauth' || user.authtype === 'xauth') {","    var accessor = {","      consumerSecret: this.config.secret","    };","    // &#229;&#183;&#178;&#233;&#128;&#154;&#232;&#191;&#135;oauth&#232;&#174;&#164;&#232;&#175;&#129;","    if (user.oauth_token_secret) {","      accessor.tokenSecret = user.oauth_token_secret;","    }","    var parameters = {};","","    for (var k in args.data) {","      parameters[k] = args.data[k];","      if (k.substring(0, 6) === 'oauth_') { // &#229;&#136;&#160;&#233;&#153;&#164;oauth_verifier&#231;&#155;&#184;&#229;&#133;&#179;&#229;&#143;&#130;&#230;&#149;&#176;","        delete args.data[k];","      }","    } ","","    var message = {","      action: url,","      method: args.type, ","      parameters: parameters","    };","    message.parameters.oauth_consumer_key = this.config.appkey;","    message.parameters.oauth_version = '1.0';","    ","    // &#229;&#183;&#178;&#233;&#128;&#154;&#232;&#191;&#135;oauth&#232;&#174;&#164;&#232;&#175;&#129;","    if (user.oauth_token) {","      message.parameters.oauth_token = user.oauth_token;","    }","    // &#232;&#174;&#190;&#231;&#189;&#174;&#230;&#151;&#182;&#233;&#151;&#180;&#230;&#136;&#179;","    OAuth.setTimestampAndNonce(message);","    // &#231;&#173;&#190;&#229;&#144;&#141;&#229;&#143;&#130;&#230;&#149;&#176;","    // console.log(message.parameters);","    OAuth.SignatureMethod.sign(message, accessor);","    // oauth&#229;&#143;&#130;&#230;&#149;&#176;&#233;&#128;&#154;&#232;&#191;&#135;get&#230;&#150;&#185;&#229;&#188;&#143;&#228;&#188;&#160;&#233;&#128;&#146;","    if (this.config.oauth_params_by_get) {","      args.data = message.parameters;","      //console.log(args.data);","    } else {","      // &#232;&#142;&#183;&#229;&#143;&#150;&#232;&#174;&#164;&#232;&#175;&#129;&#229;&#164;&#180;&#233;&#131;&#168;","      args.headers.Authorization = OAuth.getAuthorizationHeader(this.config.oauth_realm, message.parameters);","    }","  }","};","","/**"," * Result getters"," */","","TBase.prototype.get_result_items = function (data, playload, args) {","  throw new Error('Must override this method');","};","","TBase.prototype.get_result_item = function (data, playload, args) {","  return data;","};","","TBase.prototype.get_pagging_cursor = function (data, playload, args) {","  return {};","};","","/**"," * Result formaters"," */","","TBase.prototype.format_result = function (data, playload, args) {","  // status[]: need Array and item type is `status`","  // status: need item, type is `status`","  var index = playload.indexOf('[]');","  var isList = index &gt; 0;","  if (isList) {","    var itemPlayload = playload.substring(0, index);","    var items = this.get_result_items(data, itemPlayload, args) || [];","    for (var i = 0; i &lt; items.length; i++) {","      items[i] = this.format_result_item(items[i], itemPlayload, args);","    }","    var result = {};","    result.items = items;","    // try to get pagging cursor.","    result.cursor = this.get_pagging_cursor(data, itemPlayload, args);","    return result;","  }","","  var item = this.get_result_item(data, playload, args);","  return this.format_result_item(item, playload, args);","};","","TBase.prototype.format_result_item = function (data, playload, args) {","  var method = 'format_' + playload;","  return this[method](data, args);","};","","TBase.prototype.format_search_status = function (status, args) {","  throw new Error('Must override this method.');","};","","TBase.prototype.format_status = function (status, args) {","  throw new Error('Must override this method.');","};","","TBase.prototype.format_user = function (user, args) {","  throw new Error('Must override this method.');","};","","TBase.prototype.format_comment = function (comment, args) {","  throw new Error('Must override this method.');","};","","TBase.prototype.format_message = function (message, args) {","  throw new Error('Must override this method.');","};","","TBase.prototype.format_emotion = function (emotion, args) {","  throw new Error('Must override this method.');","};","","TBase.prototype.format_access_token = function (token) {","  return querystring.parse(token);","};","","TBase.prototype.format_count = function (count, args) {","  throw new Error('Must override this method.');","};","","TBase.prototype.format_favorite = function (favorite, args) {","  throw new Error('Must override this method.');","};","","/**"," * Params converters"," */","","TBase.prototype.convert_cursor = function (cursor) {","  return cursor;","};","","TBase.prototype.convert_status = function (status) {","  return status;","};","","TBase.prototype.convert_comment = function (comment) {","  return comment;","};","","TBase.prototype.convert_user = function (data) {","  return data;","};","","TBase.prototype.convert_ids = function (ids) {","  return {ids: ids};","};","","TBase.prototype.convert_favorite = function (id) {","  return {id: id};","};","","/**"," * User"," */","","TBase.prototype.verify_credentials = function (user, callback) {","  var params = {","    type: 'GET',","    user: user,","    playload: 'user',","    request_method: 'verify_credentials'","  };","  var url = this.config.verify_credentials;","  this.send_request(url, params, callback);","  return this;","};","","TBase.prototype.user_show = function (user, uid, screen_name, callback) {","  var data = {};","  if (uid) {","    data.uid = uid;","  }","  if (screen_name) {","    data.screen_name = screen_name;","    delete data.uid; // only support one","  }","  data = this.convert_user(data);","  var params = {","    type: 'GET',","    user: user,","    data: data,","    playload: 'user',","    request_method: 'user_show'","  };","  var url = this.config.user_show;","  this.send_request(url, params, callback);","  return this;","};","","/**"," * Status APIs"," */","","TBase.prototype.update = function (user, status, callback) {","  status = this.convert_status(status);","  var params = {","    type: 'POST',","    playload: 'status',","    user: user,","    data: status,","    request_method: 'update'","  };","  var url = this.config.update;","  this.send_request(url, params, callback);","  return this;","};","","TBase.prototype.upload = function (user, status, pic, callback) {","  status = this.convert_status(status);","  pic.name = pic.name || 'node-weibo-upload-image.jpg';","  if (!pic.content_type) {","    pic.content_type = utils.mimeLookup(pic.name);","  }","  if (Buffer.isBuffer(pic.data)) {","    this._upload(user, status, pic, callback);","    return this;","  }","  var buffers = [];","  var size = 0;","  var self = this;","  pic.data.on('data', function (chunk) {","    size += chunk.length;","    buffers.push(chunk);","  });","  pic.data.once('end', function () {","    pic.data = Buffer.concat(buffers, size);","    self._upload(user, status, pic, callback);","  });","  pic.data.once('error', function (err) {","    callback(err);","  });","  return this;","};","","TBase.prototype._upload = function (user, data, pic, callback) {","  var auth_args = {","    type: 'post',","    data: {},","    headers: {}","  };","  var pic_field = this.config.pic_field || 'pic';  ","  var boundary = 'boundary' + Date.now();","  // this.format_upload_params(user, data, pic , boundary);","  var dashdash = '--';","  var crlf = '\\r\\n';","","  /* RFC2388 */","  var builder = '';","","  builder += dashdash;","  builder += boundary;","  builder += crlf;","","  var key;","  for (key in data) {","    var value = this.url_encode(data[key]);","    auth_args.data[key] = value;","  }","  ","  var api = this.config.host;","  var url = api + this.config.upload + this.config.result_format;","","  // &#232;&#174;&#190;&#231;&#189;&#174;&#232;&#174;&#164;&#232;&#175;&#129;&#229;&#164;&#180;&#233;&#131;&#168;","  this.apply_auth(url, auth_args, user); ","  ","  for (key in auth_args.data) {","    /* Generate headers. key */            ","    builder += 'Content-Disposition: form-data; name=\"' + key + '\"';","    builder += crlf;","    builder += crlf; ","     /* Append form data. */","    builder += auth_args.data[key];","    builder += crlf;","    ","    /* Write boundary. */","    builder += dashdash;","    builder += boundary;","    builder += crlf;","  }","  /* Generate headers. [PIC] */            ","  builder += 'Content-Disposition: form-data; name=\"' + pic_field + '\"';"," ","  builder += '; filename=\"' + this.url_encode(pic.name) + '\"';","  builder += crlf;","","  builder += 'Content-Type: ' + pic.content_type + ';'; ","  builder += crlf;","  builder += crlf;","  ","  var endstr = crlf + dashdash + boundary + dashdash +  crlf;","  var builderLength = Buffer.byteLength(builder);","  var size = builderLength + pic.data.length + endstr.length;","  var buffer = new Buffer(size);","  var offset = 0;","  buffer.write(builder);","  offset += builderLength ;","  pic.data.copy(buffer, offset);","  offset += pic.data.length;","  buffer.write(endstr, offset);","  // if (typeof BlobBuilder === 'undefined') {","  // } ","  // else {","  //   buffer = new BlobBuilder(); //NOTE WebKitBlogBuilder","  //   buffer.append(builder);","  //   buffer.append(pic);","  //   buffer.append(endstr);","  //   buffer = buffer.getBlob();","  // }","  auth_args.headers['Content-Type'] = 'multipart/form-data;boundary=' + boundary;","  var params = {","    type: 'POST', ","    playload: 'status', ","    content: buffer, ","    headers: auth_args.headers,","    request_method: 'upload'","  };","  this.request(url, params, callback);","  return this;","};","","TBase.prototype.repost = function (user, id, status, callback) {","  status.id = id;","  status = this.convert_status(status);","  var params = {","    type: 'POST',","    playload: 'status',","    user: user,","    data: status,","    request_method: 'repost'","  };","  var url = this.config.repost;","  this.send_request(url, params, callback);","  return this;","};","","TBase.prototype.destroy = function (user, id, callback) {","  var params = {","    type: 'POST',","    playload: 'status',","    user: user,","    data: {id: id},","    request_method: 'destroy'","  };","  var url = this.config.destroy;","  this.send_request(url, params, callback);","  return this;","};","","TBase.prototype.show = function (user, id, callback) {","  var params = {","    type: 'GET',","    playload: 'status',","    user: user,","    data: {","      id: id","    },","    request_method: 'show'","  };","  var url = this.config.show;","  this.send_request(url, params, callback);","  return this;","};","","TBase.prototype.count = function (user, ids, callback) {","  var data = this.convert_ids(ids);","  var params = {","    type: 'GET',","    playload: 'count[]',","    user: user,","    data: data,","    request_method: 'count'","  };","  var url = this.config.count;","  this.send_request(url, params, function (err, result) {","    if (err) {","      return callback(err);","    }","    callback(null, result.items);","  });","  return this;","};","","TBase.prototype.home_timeline = function (user, cursor, callback) {","  return this._timeline('home_timeline', user, cursor, callback);","};","","TBase.prototype.user_timeline = function (user, cursor, callback) {","  return this._timeline('user_timeline', user, cursor, callback);","};","","TBase.prototype.public_timeline = function (user, cursor, callback) {","  return this._timeline('public_timeline', user, cursor, callback);","};","","TBase.prototype.mentions = function (user, cursor, callback) {","  return this._timeline('mentions', user, cursor, callback);","};","","TBase.prototype.repost_timeline = function (user, cursor, callback) {","  return this._timeline('repost_timeline', user, cursor, callback);","};","","TBase.prototype.search = function (user, query, cursor, callback) {","  cursor = cursor || {};","  cursor.count = cursor.count || 20;","  cursor = this.convert_cursor(cursor);","  query = utils.extend(query, cursor);","  var params = {","    type: 'GET',","    playload: 'status[]',","    user: user,","    data: query,","    request_method: 'search'","  };","  var url = this.config.search;","  this.send_request(url, params, callback);","  return this;","};","","/**"," * Favorite"," */","","TBase.prototype.favorites = function (user, cursor, callback) {","  return this._timeline('favorites', user, cursor, callback, 'favorite[]');","};","","TBase.prototype.favorite_request = function (type, name, user, id, callback) {","  var data = this.convert_favorite(id);","  var params = {","    type: type,","    playload: 'favorite',","    user: user,","    data: data,","    request_method: name","  };","  var url = this.config[name];","  this.send_request(url, params, callback);","  return this;","};","","TBase.prototype.favorite_show = function (user, id, callback) {","  return this.favorite_request('GET', 'favorite_show', user, id, callback);","};","","TBase.prototype.favorite_create = function (user, id, callback) {","  return this.favorite_request('POST', 'favorite_create', user, id, callback);","};","","TBase.prototype.favorite_destroy = function (user, id, callback) {","  return this.favorite_request('POST', 'favorite_destroy', user, id, callback);","};","","/**"," * Comment"," */","","TBase.prototype.comments = function (user, cursor, callback) {","  return this._timeline('comments', user, cursor, callback, 'comment[]');","};","","TBase.prototype.comments_timeline = function (user, cursor, callback) {","  return this._timeline('comments_timeline', user, cursor, callback, 'comment[]');","};","","TBase.prototype.comments_mentions = function (user, cursor, callback) {","  return this._timeline('comments_mentions', user, cursor, callback, 'comment[]');","};","","TBase.prototype.comments_to_me = function (user, cursor, callback) {","  return this._timeline('comments_to_me', user, cursor, callback, 'comment[]');","};","","TBase.prototype.comments_by_me = function (user, cursor, callback) {","  return this._timeline('comments_by_me', user, cursor, callback, 'comment[]');","};","","TBase.prototype.comment_create = function (user, id, comment, callback) {","  comment.id = id;","  comment = this.convert_comment(comment);","  var params = {","    type: 'POST',","    playload: 'comment',","    user: user,","    data: comment,","    request_method: 'comment_create'","  };","  var url = this.config.comment_create;","  this.send_request(url, params, callback);","  return this;","};","","TBase.prototype.comment_reply = function (user, cid, id, comment, callback) {","  comment.id = id;","  comment.cid = cid;","  comment = this.convert_comment(comment);","  var params = {","    type: 'POST',","    playload: 'comment',","    user: user,","    data: comment,","    request_method: 'comment_reply'","  };","  var url = this.config.comment_reply;","  this.send_request(url, params, callback);","  return this;","};","","TBase.prototype.comment_destroy = function (user, cid, callback) {","  var comment = {cid: cid};","  comment = this.convert_comment(comment);","  var params = {","    type: 'POST',","    playload: 'comment',","    user: user,","    data: comment,","    request_method: 'comment_destroy'","  };","  var url = this.config.comment_destroy;","  this.send_request(url, params, callback);","  return this;","};",""];
