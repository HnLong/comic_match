/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['oauth_middleware.js']) {
  _$jscoverage['oauth_middleware.js'] = [];
  _$jscoverage['oauth_middleware.js'][11] = 0;
  _$jscoverage['oauth_middleware.js'][13] = 0;
  _$jscoverage['oauth_middleware.js'][14] = 0;
  _$jscoverage['oauth_middleware.js'][15] = 0;
  _$jscoverage['oauth_middleware.js'][16] = 0;
  _$jscoverage['oauth_middleware.js'][18] = 0;
  _$jscoverage['oauth_middleware.js'][21] = 0;
  _$jscoverage['oauth_middleware.js'][22] = 0;
  _$jscoverage['oauth_middleware.js'][25] = 0;
  _$jscoverage['oauth_middleware.js'][28] = 0;
  _$jscoverage['oauth_middleware.js'][29] = 0;
  _$jscoverage['oauth_middleware.js'][32] = 0;
  _$jscoverage['oauth_middleware.js'][33] = 0;
  _$jscoverage['oauth_middleware.js'][34] = 0;
  _$jscoverage['oauth_middleware.js'][35] = 0;
  _$jscoverage['oauth_middleware.js'][36] = 0;
  _$jscoverage['oauth_middleware.js'][37] = 0;
  _$jscoverage['oauth_middleware.js'][39] = 0;
  _$jscoverage['oauth_middleware.js'][40] = 0;
  _$jscoverage['oauth_middleware.js'][44] = 0;
  _$jscoverage['oauth_middleware.js'][45] = 0;
  _$jscoverage['oauth_middleware.js'][46] = 0;
  _$jscoverage['oauth_middleware.js'][48] = 0;
  _$jscoverage['oauth_middleware.js'][49] = 0;
  _$jscoverage['oauth_middleware.js'][50] = 0;
  _$jscoverage['oauth_middleware.js'][51] = 0;
  _$jscoverage['oauth_middleware.js'][55] = 0;
  _$jscoverage['oauth_middleware.js'][56] = 0;
  _$jscoverage['oauth_middleware.js'][57] = 0;
  _$jscoverage['oauth_middleware.js'][58] = 0;
  _$jscoverage['oauth_middleware.js'][60] = 0;
  _$jscoverage['oauth_middleware.js'][61] = 0;
  _$jscoverage['oauth_middleware.js'][62] = 0;
  _$jscoverage['oauth_middleware.js'][66] = 0;
  _$jscoverage['oauth_middleware.js'][67] = 0;
  _$jscoverage['oauth_middleware.js'][68] = 0;
  _$jscoverage['oauth_middleware.js'][69] = 0;
  _$jscoverage['oauth_middleware.js'][70] = 0;
  _$jscoverage['oauth_middleware.js'][71] = 0;
  _$jscoverage['oauth_middleware.js'][72] = 0;
  _$jscoverage['oauth_middleware.js'][73] = 0;
  _$jscoverage['oauth_middleware.js'][74] = 0;
  _$jscoverage['oauth_middleware.js'][76] = 0;
  _$jscoverage['oauth_middleware.js'][77] = 0;
  _$jscoverage['oauth_middleware.js'][78] = 0;
  _$jscoverage['oauth_middleware.js'][79] = 0;
  _$jscoverage['oauth_middleware.js'][82] = 0;
  _$jscoverage['oauth_middleware.js'][83] = 0;
  _$jscoverage['oauth_middleware.js'][84] = 0;
  _$jscoverage['oauth_middleware.js'][86] = 0;
  _$jscoverage['oauth_middleware.js'][87] = 0;
  _$jscoverage['oauth_middleware.js'][89] = 0;
  _$jscoverage['oauth_middleware.js'][90] = 0;
  _$jscoverage['oauth_middleware.js'][91] = 0;
  _$jscoverage['oauth_middleware.js'][92] = 0;
  _$jscoverage['oauth_middleware.js'][94] = 0;
  _$jscoverage['oauth_middleware.js'][100] = 0;
  _$jscoverage['oauth_middleware.js'][101] = 0;
  _$jscoverage['oauth_middleware.js'][128] = 0;
  _$jscoverage['oauth_middleware.js'][129] = 0;
  _$jscoverage['oauth_middleware.js'][130] = 0;
  _$jscoverage['oauth_middleware.js'][131] = 0;
  _$jscoverage['oauth_middleware.js'][133] = 0;
  _$jscoverage['oauth_middleware.js'][134] = 0;
  _$jscoverage['oauth_middleware.js'][135] = 0;
  _$jscoverage['oauth_middleware.js'][136] = 0;
  _$jscoverage['oauth_middleware.js'][137] = 0;
  _$jscoverage['oauth_middleware.js'][138] = 0;
  _$jscoverage['oauth_middleware.js'][139] = 0;
  _$jscoverage['oauth_middleware.js'][140] = 0;
  _$jscoverage['oauth_middleware.js'][141] = 0;
  _$jscoverage['oauth_middleware.js'][142] = 0;
  _$jscoverage['oauth_middleware.js'][143] = 0;
  _$jscoverage['oauth_middleware.js'][144] = 0;
  _$jscoverage['oauth_middleware.js'][145] = 0;
  _$jscoverage['oauth_middleware.js'][147] = 0;
}
_$jscoverage['oauth_middleware.js'][11]++;
var tapi = require("./tapi");
_$jscoverage['oauth_middleware.js'][13]++;
function getReferer(req, options) {
  _$jscoverage['oauth_middleware.js'][14]++;
  var referer = req.headers.referer || "/";
  _$jscoverage['oauth_middleware.js'][15]++;
  if (referer.indexOf(options.loginPath) === 0 || referer.indexOf(options.logoutPath) === 0) {
    _$jscoverage['oauth_middleware.js'][16]++;
    referer = "/";
  }
  _$jscoverage['oauth_middleware.js'][18]++;
  return referer;
}
_$jscoverage['oauth_middleware.js'][21]++;
function redirect(res, url) {
  _$jscoverage['oauth_middleware.js'][22]++;
  res.writeHead(302, {Location: url});
  _$jscoverage['oauth_middleware.js'][25]++;
  res.end();
}
_$jscoverage['oauth_middleware.js'][28]++;
function getAuthCallback(options) {
  _$jscoverage['oauth_middleware.js'][29]++;
  return options.homeUrl + options.callbackPath;
}
_$jscoverage['oauth_middleware.js'][32]++;
function login(req, res, next, options) {
  _$jscoverage['oauth_middleware.js'][33]++;
  var blogtypeField = options.blogtypeField;
  _$jscoverage['oauth_middleware.js'][34]++;
  var blogtype = req.query[blogtypeField];
  _$jscoverage['oauth_middleware.js'][35]++;
  var referer = getReferer(req, options);
  _$jscoverage['oauth_middleware.js'][36]++;
  if (! options.homeUrl) {
    _$jscoverage['oauth_middleware.js'][37]++;
    options.homeUrl = "http://" + req.headers.host;
  }
  _$jscoverage['oauth_middleware.js'][39]++;
  var authCallback = getAuthCallback(options);
  _$jscoverage['oauth_middleware.js'][40]++;
  var user = {blogtype: blogtype, oauth_callback: authCallback};
  _$jscoverage['oauth_middleware.js'][44]++;
  tapi.get_authorization_url(user, (function (err, authInfo) {
  _$jscoverage['oauth_middleware.js'][45]++;
  if (err) {
    _$jscoverage['oauth_middleware.js'][46]++;
    return next(err);
  }
  _$jscoverage['oauth_middleware.js'][48]++;
  authInfo.blogtype = blogtype;
  _$jscoverage['oauth_middleware.js'][49]++;
  authInfo.referer = referer;
  _$jscoverage['oauth_middleware.js'][50]++;
  req.session.oauthInfo = authInfo;
  _$jscoverage['oauth_middleware.js'][51]++;
  redirect(res, authInfo.auth_url);
}));
}
_$jscoverage['oauth_middleware.js'][55]++;
function logout(req, res, next, options) {
  _$jscoverage['oauth_middleware.js'][56]++;
  options.beforeLogout(req, res, (function (err) {
  _$jscoverage['oauth_middleware.js'][57]++;
  if (err) {
    _$jscoverage['oauth_middleware.js'][58]++;
    return next(err);
  }
  _$jscoverage['oauth_middleware.js'][60]++;
  var referer = getReferer(req, options);
  _$jscoverage['oauth_middleware.js'][61]++;
  req.session.oauthUser = null;
  _$jscoverage['oauth_middleware.js'][62]++;
  redirect(res, referer);
}));
}
_$jscoverage['oauth_middleware.js'][66]++;
function oauthCallback(req, res, next, options) {
  _$jscoverage['oauth_middleware.js'][67]++;
  var oauthInfo = req.session.oauthInfo || {};
  _$jscoverage['oauth_middleware.js'][68]++;
  var blogtype = req.query[options.blogtypeField] || oauthInfo.blogtype;
  _$jscoverage['oauth_middleware.js'][69]++;
  req.session.oauthInfo = null;
  _$jscoverage['oauth_middleware.js'][70]++;
  var token = req.query;
  _$jscoverage['oauth_middleware.js'][71]++;
  token.blogtype = blogtype;
  _$jscoverage['oauth_middleware.js'][72]++;
  token.oauth_callback = getAuthCallback(options);
  _$jscoverage['oauth_middleware.js'][73]++;
  if (oauthInfo.oauth_token_secret) {
    _$jscoverage['oauth_middleware.js'][74]++;
    token.oauth_token_secret = oauthInfo.oauth_token_secret;
  }
  _$jscoverage['oauth_middleware.js'][76]++;
  var referer = oauthInfo.referer;
  _$jscoverage['oauth_middleware.js'][77]++;
  tapi.get_access_token(token, (function (err, accessToken) {
  _$jscoverage['oauth_middleware.js'][78]++;
  if (err) {
    _$jscoverage['oauth_middleware.js'][79]++;
    return next(err);
  }
  _$jscoverage['oauth_middleware.js'][82]++;
  tapi.verify_credentials(accessToken, (function (err, user) {
  _$jscoverage['oauth_middleware.js'][83]++;
  if (err) {
    _$jscoverage['oauth_middleware.js'][84]++;
    return next(err);
  }
  _$jscoverage['oauth_middleware.js'][86]++;
  for (var k in accessToken) {
    _$jscoverage['oauth_middleware.js'][87]++;
    user[k] = accessToken[k];
}
  _$jscoverage['oauth_middleware.js'][89]++;
  req.session.oauthUser = user;
  _$jscoverage['oauth_middleware.js'][90]++;
  options.afterLogin(req, res, (function (err) {
  _$jscoverage['oauth_middleware.js'][91]++;
  if (err) {
    _$jscoverage['oauth_middleware.js'][92]++;
    return next(err);
  }
  _$jscoverage['oauth_middleware.js'][94]++;
  redirect(res, referer);
}));
}));
}));
}
_$jscoverage['oauth_middleware.js'][100]++;
function defaultCallback(req, res, callback) {
  _$jscoverage['oauth_middleware.js'][101]++;
  callback();
}
_$jscoverage['oauth_middleware.js'][128]++;
module.exports = (function oauth(options) {
  _$jscoverage['oauth_middleware.js'][129]++;
  options = options || {};
  _$jscoverage['oauth_middleware.js'][130]++;
  if (options.homeUrl) {
    _$jscoverage['oauth_middleware.js'][131]++;
    options.homeUrl = options.homeUrl.replace(/\/+$/, "");
  }
  _$jscoverage['oauth_middleware.js'][133]++;
  options.loginPath = options.loginPath || "/oauth";
  _$jscoverage['oauth_middleware.js'][134]++;
  options.logoutPath = options.logoutPath || "/ouath/logout";
  _$jscoverage['oauth_middleware.js'][135]++;
  options.callbackPath = options.callbackPath || (options.loginPath + "/callback");
  _$jscoverage['oauth_middleware.js'][136]++;
  options.blogtypeField = options.blogtypeField || "type";
  _$jscoverage['oauth_middleware.js'][137]++;
  options.afterLogin = options.afterLogin || defaultCallback;
  _$jscoverage['oauth_middleware.js'][138]++;
  options.beforeLogout = options.beforeLogout || defaultCallback;
  _$jscoverage['oauth_middleware.js'][139]++;
  return (function (req, res, next) {
  _$jscoverage['oauth_middleware.js'][140]++;
  if (req.url.indexOf(options.callbackPath) === 0) {
    _$jscoverage['oauth_middleware.js'][141]++;
    oauthCallback(req, res, next, options);
  }
  else {
    _$jscoverage['oauth_middleware.js'][142]++;
    if (req.url.indexOf(options.loginPath) === 0) {
      _$jscoverage['oauth_middleware.js'][143]++;
      login(req, res, next, options);
    }
    else {
      _$jscoverage['oauth_middleware.js'][144]++;
      if (req.url.indexOf(options.logoutPath) === 0) {
        _$jscoverage['oauth_middleware.js'][145]++;
        logout(req, res, next, options);
      }
      else {
        _$jscoverage['oauth_middleware.js'][147]++;
        next();
      }
    }
  }
});
});
_$jscoverage['oauth_middleware.js'].source = ["/*!"," * node-weibo - oauth_middleware for connect"," * Copyright(c) 2012 fengmk2 &lt;fengmk2@gmail.com&gt;"," * MIT Licensed"," */","","/**"," * Module dependencies."," */","","var tapi = require('./tapi');","","function getReferer(req, options) {","  var referer = req.headers.referer || '/';","  if (referer.indexOf(options.loginPath) === 0 || referer.indexOf(options.logoutPath) === 0) {","    referer = '/';","  }","  return referer;","}","","function redirect(res, url) {","  res.writeHead(302, {","    Location: url","  });","  res.end();","}","","function getAuthCallback(options) {","  return options.homeUrl + options.callbackPath;","}","","function login(req, res, next, options) {","  var blogtypeField = options.blogtypeField;","  var blogtype = req.query[blogtypeField];","  var referer = getReferer(req, options);","  if (!options.homeUrl) {","    options.homeUrl = 'http://' + req.headers.host;","  }","  var authCallback = getAuthCallback(options);","  var user = {","    blogtype: blogtype,","    oauth_callback: authCallback","  };","  tapi.get_authorization_url(user, function (err, authInfo) {","    if (err) {","      return next(err);","    }","    authInfo.blogtype = blogtype;","    authInfo.referer = referer;","    req.session.oauthInfo = authInfo;","    redirect(res, authInfo.auth_url);","  });","}","","function logout(req, res, next, options) {","  options.beforeLogout(req, res, function (err) {","    if (err) {","      return next(err);","    }","    var referer = getReferer(req, options);","    req.session.oauthUser = null;","    redirect(res, referer);","  });","}","","function oauthCallback(req, res, next, options) {","  var oauthInfo = req.session.oauthInfo || {};","  var blogtype = req.query[options.blogtypeField] || oauthInfo.blogtype;","  req.session.oauthInfo = null;","  var token = req.query;","  token.blogtype = blogtype;","  token.oauth_callback = getAuthCallback(options);","  if (oauthInfo.oauth_token_secret) {","    token.oauth_token_secret = oauthInfo.oauth_token_secret;","  }","  var referer = oauthInfo.referer;","  tapi.get_access_token(token, function (err, accessToken) {","    if (err) {","      return next(err);","    }","    // get user info","    tapi.verify_credentials(accessToken, function (err, user) {","      if (err) {","        return next(err);","      }","      for (var k in accessToken) {","        user[k] = accessToken[k];","      }","      req.session.oauthUser = user;","      options.afterLogin(req, res, function (err) {","        if (err) {","          return next(err);","        }","        redirect(res, referer);","      });","    });","  });","}","","function defaultCallback(req, res, callback) {","  callback();","}","","/**"," * oauth middleware for connect"," *"," * example:"," *"," *  connect("," *    connect.query(),"," *    connect.cookieParser('I\\'m cookie secret.'),"," *    connect.session({ secret: \"oh year a secret\" }),"," *    weibo.oauth()"," *  );"," *"," * @param {Object} [options]"," *   - {String} [homeUrl], use to create login success oauth_callback url with referer header, "," *     default is `'http://' + req.headers.host`;"," *   - {String} [loginPath], login url, default is '/oauth'"," *   - {String} [logoutPath], default is '/oauth/logout'"," *   - {String} [callbackPath], default is login_path + '/callback'"," *   - {String} [blogtypeField], default is 'type', "," *       if you want to connect weibo, login url should be '/oauth?type=weibo'"," *   - {Function(req, res, callback)} [afterLogin], when oauth login success, will call this function."," *   - {Function(req, res, callback)} [beforeLogout], will call this function before user logout."," */","","module.exports = function oauth(options) {","  options = options || {};","  if (options.homeUrl) {","     options.homeUrl = options.homeUrl.replace(/\\/+$/, ''); ","  }","  options.loginPath = options.loginPath || '/oauth';","  options.logoutPath = options.logoutPath || '/ouath/logout';","  options.callbackPath = options.callbackPath || (options.loginPath + '/callback');","  options.blogtypeField = options.blogtypeField || 'type';","  options.afterLogin = options.afterLogin || defaultCallback;","  options.beforeLogout = options.beforeLogout || defaultCallback;","  return function (req, res, next) {","    if (req.url.indexOf(options.callbackPath) === 0) {","      oauthCallback(req, res, next, options);","    } else if (req.url.indexOf(options.loginPath) === 0) {","      login(req, res, next, options);","    } else if (req.url.indexOf(options.logoutPath) === 0) {","      logout(req, res, next, options);","    } else {","      next();","    }","  };","};"];
